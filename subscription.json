{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "DomainPrefixAbbreviation": {
            "type": "string",
            "metadata": {
                "description": "The abbreviated value of the domain name before the root node, i.e. jasonmasten for jasonmasten.com"
            }
        },
        "Environment": {
            "type": "string",
            "allowedValues": [
                "dev",
                "prod",
                "qa",
                "sandbox",
                "shared",
                "stage",
                "test"
            ],
            "metadata": {
                "description": "The operating environment of the resources"
            }
        },
        "Locations": {
            "type": "array",
            "metadata": {
                "description": "Locations for Resource Groups & Resources. The first index is primary location and the second index is the secondary location for business continuity and disaster recovery "
            }
        },
        "PerformanceType": {
            "type": "string",
            "allowedValues": [
                "p",
                "s"
            ],
            "metadata": {
                "description": "The storage account sku"
            }
        },
        "ResourceGroups": {
            "type": "array",
            "metadata": {
                "description": "The primary resource groups types for the subscription"
            }
        },
        "UserObjectId": {
            "type": "string",
            "metadata": {
                "description": "The Azure AD Object ID of the Security Principal"
            }
        },
        "VmPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Azure VM password"
            }
        },
        "VmUsername": {
            "type": "securestring",
            "metadata": {
                "description": "Azure VM username"
            }
        }
    },
    "variables": {
    },
    "resources": [
        {
            "comments": "---------- RESOURCE GROUPS > PRIMARY REGION ----------",
            "name": "[concat('rg-', parameters('ResourceGroups')[copyIndex()],'-', parameters('Environment'),'-', parameters('Locations')[0])]",
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-10-01",
            "location": "[parameters('Locations')[0]]",
            "tags": {},
            "copy": {
                "name": "rgPrimaryLoop",
                "count": "[length(parameters('ResourceGroups'))]"
            },
            "properties": {
            }
        },
        {
            "comments": "---------- RESOURCE GROUPS > SECONDARY REGION ----------",
            "name": "[concat('rg-', parameters('ResourceGroups')[copyIndex()],'-', parameters('Environment'),'-', parameters('Locations')[1])]",
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-10-01",
            "location": "[parameters('Locations')[1]]",
            "tags": {},
            "copy": {
                "name": "rgSecondaryLoop",
                "count": "[length(parameters('ResourceGroups'))]"
            },
            "properties": {
            }
        },
        {
            "comments": "---------- NESTED DEPLOYMENT > NETWORK > PRIMARY REGION ----------",
            "type": "Microsoft.Resources/deployments",
            "name": "NestedDeployment_Network",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "rgPrimaryLoop"
            ],
            "tags": {},
            "resourceGroup": "[concat('rg-network-', parameters('Environment'),'-', parameters('Locations')[0])]",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "Environment": {
                        "value": "[parameters('Environment')]"
                    },
                    "Locations": {
                        "value": "[parameters('Locations')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "Environment": {
                            "type": "string"
                        },
                        "Locations": {
                            "type": "array"
                        }
                    },
                    "resources": [
                        {
                            "comments": "---------- NETWORK WATCHER ----------",
                            "type": "Microsoft.Network/networkWatchers",
                            "apiVersion": "2020-04-01",
                            "name": "[concat('')]",
                            "location": "[parameters('Locations')[0]]",
                            "properties": {}
                        },
                        {
                            "comments": "---------- VIRTUAL NETWORK ----------",
                            "name": "[concat('vnet-', parameters('Environment'), parameters('Locations')[0])]",
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2018-08-01",
                            "location": "[parameters('Locations')[0]]",
                            "tags": {},
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "10.0.0.0/21"
                                    ]
                                },
                                "dhcpOptions": {
                                    "dnsServers": [
                                        "10.0.1.4"
                                    ]
                                },
                                "subnets": [
                                    {
                                        "name": "[concat('snet-shared-', parameters('Environment'), '-', parameters('Locations')[0])]",
                                        "properties": {
                                            "addressPrefix": "10.0.0.0/24",
                                            "serviceEndpoints": [
                                            ],
                                            "delegations": [
                                            ],
                                            "privateEndpointNetworkPolicies": "Enabled",
                                            "privateLinkServiceNetworkPolicies": "Enabled"
                                        }
                                    },
                                    {
                                        "name": "[concat('snet-servers-', parameters('Environment'), '-', parameters('Locations')[0])]",
                                        "properties": {
                                            "addressPrefix": "10.0.1.0/24",
                                            "serviceEndpoints": [
                                            ],
                                            "delegations": [
                                            ],
                                            "privateEndpointNetworkPolicies": "Enabled",
                                            "privateLinkServiceNetworkPolicies": "Enabled"
                                        }
                                    },
                                    {
                                        "name": "[concat('snet-wvd-', parameters('Environment'), '-', parameters('Locations')[0])]",
                                        "properties": {
                                            "addressPrefix": "10.0.2.0/24",
                                            "serviceEndpoints": [
                                            ],
                                            "delegations": [
                                            ],
                                            "privateEndpointNetworkPolicies": "Enabled",
                                            "privateLinkServiceNetworkPolicies": "Enabled"
                                        }
                                    }
                                ],
                                "virtualNetworkPeerings": [
                                ],
                                "enableDdosProtection": false,
                                "enableVmProtection": false
                            }
                        }
                    ]
                }
            }
        },
        {
            "comments": "---------- NESTED DEPLOYMENT > SHARED > PRIMARY REGION ----------",
            "type": "Microsoft.Resources/deployments",
            "name": "NestedDeployment_Shared",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "rgPrimaryLoop"
            ],
            "tags": {},
            "resourceGroup": "[concat('rg-shared-', parameters('Environment'),'-', parameters('Locations')[0])]",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "DomainPrefixAbbreviation": {
                        "value": "[parameters('DomainPrefixAbbreviation')]"
                    },
                    "Environment": {
                        "value": "[parameters('Environment')]"
                    },
                    "Locations": {
                        "value": "[parameters('Locations')]"
                    },
                    "PerformanceType": {
                        "value": "[parameters('PerformanceType')]"
                    },
                    "UserObjectId": {
                        "value": "[parameters('UserObjectId')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "DomainPrefixAbbreviation": {
                            "type": "string"
                        },
                        "Environment": {
                            "type": "string"
                        },
                        "Locations": {
                            "type": "array"
                        },
                        "PerformanceType": {
                            "type": "string"
                        },
                        "UserObjectId": {
                            "type": "string"
                        }
                    },
                    "resources": [
                        {
                            "comments": "---------- STORAGE ACCOUNT ----------",
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2019-06-01",
                            "name": "[concat('stor', parameters('PerformanceType'), parameters('DomainPrefixAbbreviation'), parameters('Environment'), parameters('Locations')[0])]",
                            "location": "[parameters('Locations')[0]]",
                            "sku": {
                                "name": "Standard_LRS",
                                "tier": "Standard"
                            },
                            "kind": "StorageV2",
                            "properties": {
                                "networkAcls": {
                                    "bypass": "AzureServices",
                                    "virtualNetworkRules": [
                                    ],
                                    "ipRules": [
                                    ],
                                    "defaultAction": "Allow"
                                },
                                "supportsHttpsTrafficOnly": true,
                                "encryption": {
                                    "services": {
                                        "file": {
                                            "keyType": "Account",
                                            "enabled": true
                                        },
                                        "blob": {
                                            "keyType": "Account",
                                            "enabled": true
                                        }
                                    },
                                    "keySource": "Microsoft.Storage"
                                },
                                "accessTier": "Hot"
                            }
                        },
                        {
                            "comments": "---------- KEY VAULT ----------",
                            "type": "Microsoft.KeyVault/vaults",
                            "name": "[concat('kv', parameters('DomainPrefixAbbreviation'), parameters('Environment'), parameters('Locations')[0])]",
                            "apiVersion": "2016-10-01",
                            "location": "[parameters('Locations')[0]]",
                            "tags": {},
                            "properties": {
                                "tenantId": "[subscription().tenantId]",
                                "sku": {
                                    "family": "A",
                                    "name": "Standard"
                                },
                                "accessPolicies": [
                                    {
                                        "tenantId": "[subscription().tenantId]",
                                        "objectId": "[parameters('UserObjectId')]",
                                        "permissions": {
                                            "keys": [
                                                "encrypt",
                                                "decrypt",
                                                "wrapKey",
                                                "unwrapKey",
                                                "sign",
                                                "verify",
                                                "get",
                                                "list",
                                                "create",
                                                "update",
                                                "import",
                                                "delete",
                                                "backup",
                                                "restore",
                                                "recover",
                                                "purge"
                                            ],
                                            "secrets": [
                                                "get",
                                                "list",
                                                "set",
                                                "delete",
                                                "backup",
                                                "restore",
                                                "recover",
                                                "purge"
                                            ]
                                        }
                                    }
                                ],
                                "enabledForDeployment": true,
                                "enabledForTemplateDeployment": true,
                                "enabledForDiskEncryption": true
                            }
                        },
                        {
                            "comments": "---------- AUTOMATION ACCOUNT ----------",
                            "name": "[concat('aa', parameters('DomainPrefixAbbreviation'), parameters('Environment'), parameters('Locations')[0])]",
                            "type": "Microsoft.Automation/automationAccounts",
                            "apiVersion": "2015-10-31",
                            "location": "[parameters('Locations')[0]]",
                            "tags": {
                            },
                            "properties": {
                                "sku": {
                                    "name": "Free"
                                }
                            }
                        },
                        {
                            "comments": "---------- LOG ANALYTICS ----------",
                            "type": "Microsoft.OperationalInsights/workspaces",
                            "apiVersion": "2020-03-01-preview",
                            "name": "[concat('law-', parameters('Environment'), '-', parameters('Locations')[0])]",
                            "location": "[parameters('Locations')[0]]",
                            "tags": {},
                            "properties": {
                                "sku": {
                                    "name": "pergb2018"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "comments": "---------- NESTED DEPLOYMENT > IDENTITY > PRIMARY REGION ----------",
            "type": "Microsoft.Resources/deployments",
            "name": "NestedDeployment_Identity",
            "apiVersion": "2019-10-01",
            "dependsOn": [
                "rgPrimaryLoop",
                "NestedDeployment_Network"
            ],
            "resourceGroup": "[concat('rg-identity-', parameters('Environment'),'-', parameters('Locations')[0])]",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {

                    "Environment": {
                        "value": "[parameters('Environment')]"
                    },
                    "Locations": {
                        "value": "[parameters('Locations')]"
                    },
                    "VmPassword": {
                        "value": "[parameters('VmPassword')]"
                    },
                    "VmUsername": {
                        "value": "[parameters('VmUsername')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "Environment": {
                            "type": "string"
                        },
                        "Locations": {
                            "type": "array"
                        },
                        "VmPassword": {
                            "type": "securestring"
                        },
                        "VmUsername": {
                            "type": "securestring"
                        }
                    },
                    "resources": [
                        {
                            "comments": "---------- AVAILABILITY SET ----------",
                            "name": "[concat('as-vmdc', parameters('Environment'), parameters('Locations')[0])]",
                            "type": "Microsoft.Compute/availabilitySets",
                            "apiVersion": "2019-07-01",
                            "location": "[parameters('Locations')[0]]",
                            "properties": {
                                "platformFaultDomainCount": 2,
                                "platformUpdateDomainCount": 2
                            },
                            "sku": {
                                "name": "Aligned"
                            }
                        },
                        {
                            "comments": "---------- NETWORK INTERFACE ----------",
                            "name": "[concat('nic-vmdc', parameters('Environment'), parameters('Locations')[0], '0')]",
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2018-08-01",
                            "location": "[parameters('Locations')[0]]",
                            "tags": {
                            },
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipConfig0",
                                        "properties": {
                                            "privateIPAllocationMethod": "Static",
                                            "privateIPAddress": "10.0.1.4",
                                            "subnet": {
                                                "id": "[resourceId(subscription().subscriptionId, concat('rg-network-', parameters('Environment'),'-', parameters('Locations')[0]), 'Microsoft.Network/virtualNetworks/subnets', concat('vnet-', parameters('Environment'), parameters('Locations')[0]), concat('snet-servers-', parameters('Environment'), '-',parameters('Locations')[0]))]"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "comments": "---------- VIRTUAL MACHINE ----------",
                            "name": "[concat('vmdc', parameters('Environment'), parameters('Locations')[0], '0')]",
                            "type": "Microsoft.Compute/virtualMachines",
                            "apiVersion": "2017-03-30",
                            "location": "[parameters('Locations')[0]]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-vmdc', parameters('Environment'), parameters('Locations')[0], '0'))]",
                                "[resourceId('Microsoft.Compute/availabilitySets', concat('as-vmdc', parameters('Environment'), parameters('Locations')[0]))]"
                            ],
                            "properties": {
                                "hardwareProfile": {
                                    "vmSize": "Standard_A1_v2"
                                },
                                "osProfile": {
                                    "computerName": "[concat('vmdc', parameters('Environment'), parameters('Locations')[0], '0')]",
                                    "adminUsername": "[parameters('VmUsername')]",
                                    "adminPassword": "[parameters('VmPassword')]"
                                },
                                "storageProfile": {
                                    "imageReference": {
                                        "publisher": "MicrosoftWindowsServer",
                                        "offer": "WindowsServer",
                                        "sku": "2016-Datacenter",
                                        "version": "latest"
                                    },
                                    "osDisk": {
                                        "name": "[concat('disk-vmdc', parameters('Environment'), parameters('Locations')[0], '0-0')]",
                                        "caching": "None",
                                        "createOption": "FromImage",
                                        "managedDisk": {
                                            "storageAccountType": "Standard_LRS"
                                        }

                                    }
                                },
                                "networkProfile": {
                                    "networkInterfaces": [
                                        {
                                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-vmdc', parameters('Environment'), parameters('Locations')[0], '0'))]"
                                        }
                                    ]
                                },
                                "diagnosticsProfile": {
                                    "bootDiagnostics": {
                                        "enabled": false
                                    }
                                },
                                "availabilitySet": {
                                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat('as-vmdc', parameters('Environment'), parameters('Locations')[0]))]"
                                }
                            }
                        },
                        {
                            "comments": "---------- NETWORK WATCHER EXTENSION ----------",
                            "type": "Microsoft.Compute/virtualMachines/extensions",
                            "apiVersion": "2017-03-30",
                            "name": "[concat('vmdc', parameters('Environment'), parameters('Locations')[0], '0/AzureNetworkWatcherExtension')]",
                            "location": "[parameters('Locations')[0]]",
                            "dependsOn": [
                                "[concat('vmdc', parameters('Environment'), parameters('Locations')[0], '0')]"
                            ],
                            "properties": {
                                "publisher": "Microsoft.Azure.NetworkWatcher",
                                "type": "NetworkWatcherAgentWindows",
                                "typeHandlerVersion": "1.4",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                }
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
    }
}