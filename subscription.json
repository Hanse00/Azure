{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "blueprintPrefix": {
            "type": "string",
            "defaultValue": "jamasten",
            "metadata": {
                "description": "Name of the Blueprint"
            }
        },
        "DcCount": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 2,
            "metadata": {
                "description": "Count of Domain Controllers"
            }
        },
        "DomainPrefix": {
            "type": "string",
            "metadata": {
                "description": "The value in the domain name before the root node, i.e. jasonmasten for jasonmasten.com"
            }
        },
        "Environment": {
            "type": "string",
            "allowedValues": [
                "dev",
                "prod",
                "qa",
                "sandbox",
                "shared",
                "stage",
                "test"
            ],
            "metadata": {
                "description": "The operating environment of the resources"
            }
        },
        "Locations": {
            "type": "array",
            "metadata": {
                "description": "Locations for Resource Groups & Resources. The first index is primary location and the second index is the secondary location for business continuity and disaster recovery "
            }
        },
        "NetworkCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Determines if vnets will be deployed to one or two locations"
            }
        },
        "PerformanceType": {
            "type": "string",
            "allowedValues": [
                "p",
                "s"
            ],
            "metadata": {
                "description": "The storage account sku"
            }
        },
        "UserObjectId": {
            "type": "string",
            "metadata": {
                "description": "The Azure AD Object ID of the Security Principal"
            }
        },
        "VersionNumber": {
            "type": "string",
            "metadata": {
                "description": "Blueprint version number"
            }
        },
        "VmPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Local Admin Password for Virtual Machines"
            }
        },
        "VmUsername": {
            "type": "securestring",
            "metadata": {
                "description": "Local Admin Username of Virtual Machines"
            }
        }
    },
    "variables": {
        "blueprintDefinition": "[concat(parameters('blueprintPrefix'), '_definition')]"
    },
    "resources": [
        {
            "type": "Microsoft.Blueprint/blueprints",
            "name": "[variables('blueprintDefinition')]",
            "apiVersion": "2018-11-01-preview",
            "properties": {
                "targetScope": "subscription",
                "description": "This blueprint stamps out new subscriptions for app teams with their resource groups and baseline infrastructure.  This includes policies on the resource groups.",
                "resourceGroups": {
                    "Identity-Primary": {
                        "description": "Contains the identity infrastructure in the primary region.",
                        "location": "[parameters('Locations')[0]]",
                        "name": "[concat('rg-identity-', parameters('Environment'),'-', parameters('Locations')[0])]"
                    },
                    "Identity-Secondary": {
                        "description": "Contains the identity infrastructure in the secondary region.",
                        "location": "[parameters('Locations')[1]]",
                        "name": "[concat('rg-identity-', parameters('Environment'),'-', parameters('Locations')[1])]"
                    },
                    "Network-Primary": {
                        "description": "Contains the network infrastructure and controls in the primary region.",
                        "location": "[parameters('Locations')[0]]",
                        "name": "[concat('rg-network-', parameters('Environment'),'-', parameters('Locations')[0])]"
                    },
                    "Network-Secondary": {
                        "description": "Contains the network infrastructure and controls in the secondary region.",
                        "location": "[parameters('Locations')[1]]",
                        "name": "[concat('rg-network-', parameters('Environment'),'-', parameters('Locations')[1])]"
                    },
                    "Shared-Primary": {
                        "description": "Contains the supporting, shared Azure resources for the subscription in the primary region.",
                        "location": "[parameters('Locations')[0]]",
                        "name": "[concat('rg-shared-', parameters('Environment'),'-', parameters('Locations')[0])]"
                    },
                    "Shared-Secondary": {
                        "description": "Contains the supporting, shared Azure resources for the subscription in the secondary region.",
                        "location": "[parameters('Locations')[1]]",
                        "name": "[concat('rg-shared-', parameters('Environment'),'-', parameters('Locations')[1])]"
                    },
                    "WVD-Primary": {
                        "description": "Contains the resources supporting Windows Virtual Desktop in the primary location.",
                        "location": "[parameters('Locations')[0]]",
                        "name": "[concat('rg-wvd-', parameters('Environment'),'-', parameters('Locations')[0])]"
                    },
                    "WVD-Secondary": {
                        "description": "Contains the resources supporting Windows Virtual Desktop in the secondary location.",
                        "location": "[parameters('Locations')[1]]",
                        "name": "[concat('rg-wvd-', parameters('Environment'),'-', parameters('Locations')[1])]"
                    }
                }
            },
            "resources": [
                {
                    "type": "artifacts",
                    "name": "[concat('templateArtifact_network_', parameters('Locations')[0])]",
                    "apiVersion": "2018-11-01-preview",
                    "kind": "template",
                    "dependsOn": [
                        "[variables('blueprintDefinition')]"
                    ],
                    "properties": {
                        "displayName": "DeployNetworkInfrastructure",
                        "description": "This template deploys the network infrastructure for the subscription",
                        "parameters": {
                            "Environment": {
                                "value": "[parameters('Environment')]"
                            },
                            "Location": {
                                "value": "[parameters('Locations')[0]]"
                            }
                        },
                        "dependsOn": [
                        ],
                        "resourceGroup": "[concat('rg-network-', parameters('Environment'),'-', parameters('Locations')[0])]",
                        "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                                "Environment": {
                                    "type": "string"
                                },
                                "Locations": {
                                    "type": "array"
                                }
                            },
                            "resources": [
                                {
                                    "name": "[concat('vnet-', parameters('Environment'), parameters('Locations')[0])]",
                                    "type": "Microsoft.Network/virtualNetworks",
                                    "apiVersion": "2018-08-01",
                                    "location": "[parameters('Locations')[0]]",
                                    "tags": {
                                    },
                                    "properties": {
                                        "addressSpace": {
                                            "addressPrefixes": [
                                                "10.0.0.0/21"
                                            ]
                                        },
                                        "dhcpOptions": {
                                            "dnsServers": [
                                                "10.0.1.4"
                                            ]
                                        },
                                        "subnets": [
                                            {
                                                "name": "shared",
                                                "properties": {
                                                    "addressPrefix": "10.0.0.0/24",
                                                    "serviceEndpoints": [
                                                    ],
                                                    "delegations": [
                                                    ],
                                                    "privateEndpointNetworkPolicies": "Enabled",
                                                    "privateLinkServiceNetworkPolicies": "Enabled"
                                                }
                                            },
                                            {
                                                "name": "servers",
                                                "properties": {
                                                    "addressPrefix": "10.0.1.0/24",
                                                    "serviceEndpoints": [
                                                    ],
                                                    "delegations": [
                                                    ],
                                                    "privateEndpointNetworkPolicies": "Enabled",
                                                    "privateLinkServiceNetworkPolicies": "Enabled"
                                                }
                                            },
                                            {
                                                "name": "wvdClients",
                                                "properties": {
                                                    "addressPrefix": "10.0.2.0/24",
                                                    "serviceEndpoints": [
                                                    ],
                                                    "delegations": [
                                                    ],
                                                    "privateEndpointNetworkPolicies": "Enabled",
                                                    "privateLinkServiceNetworkPolicies": "Enabled"
                                                }
                                            }
                                        ],
                                        "virtualNetworkPeerings": [
                                        ],
                                        "enableDdosProtection": false,
                                        "enableVmProtection": false
                                    }
                                }
                            ]
                        }
                    }
                },
                {
                    "condition": "[greaterOrEquals(parameters('NetworkCount'), 2)]",
                    "type": "artifacts",
                    "name": "[concat('templateArtifact_network_', parameters('Locations')[1])]",
                    "apiVersion": "2018-11-01-preview",
                    "kind": "template",
                    "dependsOn": [
                        "[variables('blueprintDefinition')]"
                    ],
                    "properties": {
                        "displayName": "[concat('DeployNetworkInfrastructure_', parameters('Locations')[1])]",
                        "description": "This template deploys the network infrastructure for the subscription",
                        "parameters": {
                            "Environment": {
                                "value": "[parameters('Environment')]"
                            },
                            "Location": {
                                "value": "[parameters('Locations')[1]]"
                            }
                        },
                        "dependsOn": [
                        ],
                        "resourceGroup": "[concat('rg-network-', parameters('Environment'),'-', parameters('Locations')[1])]",
                        "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                                "Environment": {
                                    "type": "string"
                                },
                                "Locations": {
                                    "type": "array"
                                }
                            },
                            "resources": [
                                {
                                    "name": "[concat('vnet-', parameters('Environment'), parameters('Locations')[1])]",
                                    "type": "Microsoft.Network/virtualNetworks",
                                    "apiVersion": "2018-08-01",
                                    "location": "[parameters('Locations')[1]]",
                                    "tags": {
                                    },
                                    "properties": {
                                        "addressSpace": {
                                            "addressPrefixes": [
                                                "10.0.8.0/21"
                                            ]
                                        },
                                        "dhcpOptions": {
                                            "dnsServers": [
                                                "10.0.9.4"
                                            ]
                                        },
                                        "subnets": [
                                            {
                                                "name": "shared",
                                                "properties": {
                                                    "addressPrefix": "10.0.8.0/24",
                                                    "serviceEndpoints": [
                                                    ],
                                                    "delegations": [
                                                    ],
                                                    "privateEndpointNetworkPolicies": "Enabled",
                                                    "privateLinkServiceNetworkPolicies": "Enabled"
                                                }
                                            },
                                            {
                                                "name": "servers",
                                                "properties": {
                                                    "addressPrefix": "10.0.9.0/24",
                                                    "serviceEndpoints": [
                                                    ],
                                                    "delegations": [
                                                    ],
                                                    "privateEndpointNetworkPolicies": "Enabled",
                                                    "privateLinkServiceNetworkPolicies": "Enabled"
                                                }
                                            },
                                            {
                                                "name": "wvdClients",
                                                "properties": {
                                                    "addressPrefix": "10.0.10.0/24",
                                                    "serviceEndpoints": [
                                                    ],
                                                    "delegations": [
                                                    ],
                                                    "privateEndpointNetworkPolicies": "Enabled",
                                                    "privateLinkServiceNetworkPolicies": "Enabled"
                                                }
                                            }
                                        ],
                                        "virtualNetworkPeerings": [
                                        ],
                                        "enableDdosProtection": false,
                                        "enableVmProtection": false
                                    }
                                }
                            ]
                        }
                    }
                },
                {
                    "type": "artifacts",
                    "name": "[concat('templateArtifact_shared_', parameters('Locations')[0])]",
                    "apiVersion": "2018-11-01-preview",
                    "kind": "template",
                    "dependsOn": [
                        "[variables('blueprintDefinition')]"
                    ],
                    "properties": {
                        "displayName": "[concat('DeploySharedServices', parameters('Locations')[0])]",
                        "description": "This template deploys the common services needed for each subscription",
                        "parameters": {
                            "DomainPrefix": {
                                "value": "[parameters('DomainPrefix')]"
                            },
                            "Location": {
                                "value": "[parameters('Locations')[0]]"
                            },
                            "PerformanceType": {
                                "value": "[parameters('PerformanceType')]"
                            },
                            "UserObjectId": {
                                "value": "[parameters('UserObjectId')]"
                            }
                        },
                        "resourceGroup": "[concat('rg-shared-', parameters('Environment'),'-', parameters('Locations')[0])]",
                        "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                                "DomainPrefix": {
                                    "type": "string"
                                },
                                "Locations": {
                                    "type": "string"
                                },
                                "PerformanceType": {
                                    "type": "string"
                                },
                                "UserObjectId": {
                                    "type": "string"
                                }
                            },
                            "resources": [
                                {
                                    "type": "Microsoft.Storage/storageAccounts",
                                    "apiVersion": "2019-06-01",
                                    "name": "[concat('stor', parameters('PerformanceType'), parameters('DomainPrefix'), parameters('Environment'), parameters('Locations')[0])]",
                                    "location": "[parameters('Locations')[0]]",
                                    "sku": {
                                        "name": "Standard_LRS",
                                        "tier": "Standard"
                                    },
                                    "kind": "StorageV2",
                                    "properties": {
                                        "networkAcls": {
                                            "bypass": "AzureServices",
                                            "virtualNetworkRules": [
                                            ],
                                            "ipRules": [
                                            ],
                                            "defaultAction": "Allow"
                                        },
                                        "supportsHttpsTrafficOnly": true,
                                        "encryption": {
                                            "services": {
                                                "file": {
                                                    "keyType": "Account",
                                                    "enabled": true
                                                },
                                                "blob": {
                                                    "keyType": "Account",
                                                    "enabled": true
                                                }
                                            },
                                            "keySource": "Microsoft.Storage"
                                        },
                                        "accessTier": "Hot"
                                    }
                                },
                                {
                                    "type": "Microsoft.KeyVault/vaults",
                                    "name": "[concat('kv', parameters('DomainPrefix'), parameters('Environment'), parameters('Locations')[0])]",
                                    "apiVersion": "2019-09-01",
                                    "location": "[parameters('Locations')[0]]",
                                    "tags": {
                                    },
                                    "properties": {
                                        "enabledForDeployment": true,
                                        "enabledForTemplateDeployment": true,
                                        "enabledForDiskEncryption": true,
                                        "tenantId": "[subscription().tenantId]",
                                        "accessPolicies": [
                                            {
                                                "tenantId": "[subscription().tenantId]",
                                                "objectId": "[parameters('UserObjectId')]",
                                                "permissions": {
                                                    "keys": [
                                                        "encrypt",
                                                        "decrypt",
                                                        "wrapKey",
                                                        "unwrapKey",
                                                        "sign",
                                                        "verify",
                                                        "get",
                                                        "list",
                                                        "create",
                                                        "update",
                                                        "import",
                                                        "delete",
                                                        "backup",
                                                        "restore",
                                                        "recover",
                                                        "purge"
                                                    ],
                                                    "secrets": [
                                                        "get",
                                                        "list",
                                                        "set",
                                                        "delete",
                                                        "backup",
                                                        "restore",
                                                        "recover",
                                                        "purge"
                                                    ]
                                                }
                                            }
                                        ],
                                        "sku": {
                                            "name": "standard",
                                            "family": "A"
                                        }
                                    }
                                },
                                {
                                    "name": "[concat('aa', parameters('DomainPrefix'), parameters('Environment'), parameters('Locations')[0])]",
                                    "type": "Microsoft.Automation/automationAccounts",
                                    "apiVersion": "2015-10-31",
                                    "location": "[parameters('Locations')[0]]",
                                    "tags": {
                                    },
                                    "properties": {
                                        "sku": {
                                            "name": "Free"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                },
                {
                    "type": "artifacts",
                    "name": "[concat('templateArtifact_identity_', parameters('Locations')[0])]",
                    "apiVersion": "2018-11-01-preview",
                    "kind": "template",
                    "dependsOn": [
                        "[variables('blueprintDefinition')]"
                    ],
                    "properties": {
                        "displayName": "[concat('DeploySharedServices', parameters('Locations')[0])]",
                        "description": "This template deploys the common services needed for each subscription",
                        "parameters": {
                            "DcCount": {
                                "value": "[parameters('DcCount')]"
                            },
                            "Environment": {
                                "value": "[parameters('Environment')]"
                            },
                            "VmPassword": {
                                "value": "[parameters('VmPassword')]"
                            },
                            "VmUsername": {
                                "value": "[parameters('VmUsername')]"
                            }
                        },
                        "resourceGroup": "[concat('rg-identity-', parameters('Environment'),'-', parameters('Locations')[0])]",
                        "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                                "DcCount": {
                                    "type": "int"
                                },
                                "Environment": {
                                    "type": "string"
                                },
                                "VmPassword": {
                                    "type": "securestring"
                                },
                                "VmUsername": {
                                    "type": "securestring"
                                }
                            },
                            "resources": [
                                {
                                    "name": "[concat('as-vmdc', parameters('Environment'), parameters('Locations')[0])]",
                                    "type": "Microsoft.Compute/availabilitySets",
                                    "apiVersion": "2019-07-01",
                                    "location": "[parameters('Locations')[0]]",
                                    "properties": {
                                        "platformFaultDomainCount": 2,
                                        "platformUpdateDomainCount": 2
                                    },
                                    "sku": {
                                        "name": "Aligned"
                                    }
                                },
                                {
                                    "name": "[concat('nic-vmdc', parameters('Environment'), parameters('Locations')[0], copyIndex(), '-0')]",
                                    "type": "Microsoft.Network/networkInterfaces",
                                    "apiVersion": "2018-08-01",
                                    "location": "[parameters('Locations')[0]]",
                                    "tags": {
                                    },
                                    "copy": {
                                        "name": "nicLoop",
                                        "count": "[parameters('DcCount')]"
                                    },
                                    "properties": {
                                        "ipConfigurations": [
                                            {
                                                "name": "ipConfig0",
                                                "properties": {
                                                    "privateIPAllocationMethod": "Static",
                                                    "privateIPAddress": "[concat('10.0.1.', copyIndex(4))]",
                                                    "subnet": {
                                                        "id": "[resourceId('network','Microsoft.Network/virtualNetworks/subnets', concat('vnet-', parameters('Environment'), parameters('Locations')[0]), concat('snet-shared-', parameters('Locations')[0], '-servers'))]"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "[concat('vmdc', parameters('Environment'), parameters('Locations')[0], copyIndex())]",
                                    "type": "Microsoft.Compute/virtualMachines",
                                    "apiVersion": "2017-03-30",
                                    "location": "[parameters('Locations')[0]]",
                                    "copy": {
                                        "name": "vmLoop",
                                        "count": "[parameters('DcCount')]"
                                    },
                                    "dependsOn": [
                                        "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-vmdc', parameters('Environment'), parameters('Locations')[0], copyIndex(), '-0'))]",
                                        "[resourceId('Microsoft.Compute/availabilitySets', concat('as-vmdc', parameters('Environment'), parameters('Locations')[0]))]"
                                    ],
                                    "properties": {
                                        "hardwareProfile": {
                                            "vmSize": "Standard_A1_v2"
                                        },
                                        "osProfile": {
                                            "computerName": "[concat('vmdc', parameters('Environment'), parameters('Locations')[0], copyIndex())]",
                                            "adminUsername": "[parameters('VmUsername')]",
                                            "adminPassword": "[parameters('VmPassword')]"
                                        },
                                        "storageProfile": {
                                            "imageReference": {
                                                "publisher": "MicrosoftWindowsServer",
                                                "offer": "WindowsServer",
                                                "sku": "2016-Datacenter",
                                                "version": "latest"
                                            },
                                            "osDisk": {
                                                "name": "[concat('disk-vmdc', parameters('Environment'), parameters('Locations')[0], copyIndex(), '-0')]",
                                                "caching": "None",
                                                "createOption": "FromImage",
                                                "managedDisk": {
                                                    "storageAccountType": "Standard_LRS"
                                                }

                                            }
                                        },
                                        "networkProfile": {
                                            "networkInterfaces": [
                                                {
                                                    "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-vmdc', parameters('Environment'), parameters('Locations')[0], copyIndex(), '-0'))]"
                                                }
                                            ]
                                        },
                                        "diagnosticsProfile": {
                                            "bootDiagnostics": {
                                                "enabled": false
                                            }
                                        },
                                        "availabilitySet": {
                                            "id": "[resourceId('Microsoft.Compute/availabilitySets', concat('as-vmdc', parameters('Environment'), parameters('Locations')[0]))]"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "type": "extensions",
                                            "apiVersion": "2017-03-30",
                                            "name": "AzureNetworkWatcherExtension",
                                            "location": "[parameters('Locations')[0]]",
                                            "dependsOn": [
                                                "[concat('vmdc', parameters('Environment'), parameters('Locations')[0], copyIndex())]"
                                            ],
                                            "properties": {
                                                "publisher": "Microsoft.Azure.NetworkWatcher",
                                                "type": "NetworkWatcherAgentWindows",
                                                "typeHandlerVersion": "1.4",
                                                "autoUpgradeMinorVersion": true,
                                                "settings": {
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                {
                    "type": "versions",
                    "name": "[parameters('VersionNumber')]",
                    "apiVersion": "2018-11-01-preview",
                    "dependsOn": [
                        "[variables('blueprintDefinition')]",
                        "[concat('templateArtifact_network_', parameters('Locations')[0])]",
                        "[concat('templateArtifact_network_', parameters('Locations')[1])]",
                        "[concat('templateArtifact_shared', parameters('Locations')[0])]"
                    ],
                    "properties": {
                        "displayName": "[concat(parameters('blueprintPrefix'), '_blueprint')]",
                        "description": "The base infrastructure for a subscription",
                        "targetScope": "subscription",
                        "parameters": {
                        },
                        "resourceGroups": {
                        },
                        "blueprintName": "[concat(parameters('blueprintPrefix'), '_blueprint')]",
                        "changeNotes": "test"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Blueprint/blueprintAssignments",
            "name": "[concat(parameters('blueprintPrefix'), '_assignment')]",
            "apiVersion": "2018-11-01-preview",
            "location": "[parameters('Locations')[0]]",
            "dependsOn": [
                "[concat(subscription().id, '/providers/Microsoft.Blueprint/blueprints/', variables('blueprintDefinition'), '/versions/', parameters('VersionNumber'))]"
            ],
            "identity": {
                "type": "SystemAssigned",
                "tenantId": "[subscription().tenantId]"
            },
            "properties": {
                "displayName": "[concat(parameters('blueprintPrefix'), '_assignment')]",
                "description": "This blueprint provides the base infrastructure for a subscription",
                "blueprintId": "[concat(subscription().id, '/providers/Microsoft.Blueprint/blueprints/', variables('blueprintDefinition'))]",
                "scope": "[subscription().id]",
                "parameters": {
                },
                "resourceGroups": {
                },
                "locks": {
                    "mode": "None",
                    "excludedPrincipals": [
                    ],
                    "excludedActions": [
                    ]
                }
            }
        }
    ],
    "outputs": {
    }
}