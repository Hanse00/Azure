{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "DomainAbbreviation": {
            "type": "string"
        },
        "Environment": {
            "type": "string"
        },
        "KeyEncryptionKeyURL": {
            "type": "string"
        },
        "VmPassword": {
            "type": "securestring"
        },
        "VmUsername": {
            "type": "securestring"
        }
    },
    "variables": {
        "KeyVaultResourceGroup": "[concat('rg-shared-', parameters('Environment'), '-', resourceGroup().location)]",
        "KeyVaultName": "[concat('kv', parameters('DomainAbbreviation'), parameters('Environment'), resourceGroup().location)]",
        "KeyVaultResourceID": "[resourceId(variables('KeyVaultResourceGroup'), 'Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]",
        "LogAnalyticsWorkspace": "[concat('law-', parameters('Environment'), '-', resourceGroup().location)]"
    },
    "resources": [
        {
            "comments": "---------- AVAILABILITY SET ----------",
            "name": "[concat('as-vmdc', parameters('Environment'), resourceGroup().location)]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "comments": "---------- NETWORK INTERFACE ----------",
            "name": "[concat('nic-vmdc', parameters('Environment'), resourceGroup().location, '0')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "tags": {
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig0",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "10.0.1.4",
                            "subnet": {
                                "id": "[resourceId(subscription().subscriptionId, concat('rg-network-', parameters('Environment'),'-', resourceGroup().location), 'Microsoft.Network/virtualNetworks/subnets', concat('vnet-', parameters('Environment'), '-', resourceGroup().location), concat('snet-servers-', parameters('Environment'), '-',resourceGroup().location))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "comments": "---------- VIRTUAL MACHINE ----------",
            "name": "[concat('vmdc', parameters('Environment'), resourceGroup().location, '0')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-vmdc', parameters('Environment'), resourceGroup().location, '0'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', concat('as-vmdc', parameters('Environment'), resourceGroup().location))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A1_v2"
                },
                "osProfile": {
                    "computerName": "[concat('vmdc', parameters('Environment'), resourceGroup().location, '0')]",
                    "adminUsername": "[parameters('VmUsername')]",
                    "adminPassword": "[parameters('VmPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat('disk-vmdc', parameters('Environment'), resourceGroup().location, '0-0')]",
                        "caching": "None",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }

                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-vmdc', parameters('Environment'), resourceGroup().location, '0'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat('as-vmdc', parameters('Environment'), resourceGroup().location))]"
                }
            },
            "resources": [
                {
                    "comments": "---------- MICROSOFT MONITORING AGENT ----------",
                    "type": "extensions",
                    "name": "MicrosoftMonitoringAgent",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('vmdc', parameters('Environment'), resourceGroup().location, '0')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                        "type": "MicrosoftMonitoringAgent",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "workspaceId": "[reference(resourceId(concat('rg-shared-', parameters('Environment'),'-', resourceGroup().location), 'Microsoft.OperationalInsights/workspaces/', variables('LogAnalyticsWorkspace')), '2015-03-20').customerId]"
                        },
                        "protectedSettings": {
                            "workspaceKey": "[listKeys(resourceId(concat('rg-shared-', parameters('Environment'),'-', resourceGroup().location), 'Microsoft.OperationalInsights/workspaces/', variables('LogAnalyticsWorkspace')), '2015-03-20').primarySharedKey]"
                        }
                    }
                },
                {
                    "comments": "---------- NETWORK WATCHER EXTENSION ----------",
                    "type": "extensions",
                    "apiVersion": "2017-03-30",
                    "name": "NetworkWatcherAgentWindows",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('vmdc', parameters('Environment'), resourceGroup().location, '0')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.NetworkWatcher",
                        "type": "NetworkWatcherAgentWindows",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                        }
                    }
                },
                {
                    "comments": "---------- DEPENDENCY AGENT FOR AZURE MONITOR ----------",
                    "type": "extensions",
                    "apiVersion": "2017-03-30",
                    "name": "DependencyAgentWindows",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('vmdc', parameters('Environment'), resourceGroup().location, '0')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                        "type": "DependencyAgentWindows",
                        "typeHandlerVersion": "9.5",
                        "autoUpgradeMinorVersion": true
                    }
                },
                {
                    "comments": "---------- AZURE DISK ENCRYPTION EXTENSION ----------",
                    "type": "extensions",
                    "name": "AzureDiskEncryption",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2017-03-30",
                    "dependsOn": [
                        "[concat('vmdc', parameters('Environment'), resourceGroup().location, '0')]",
                        "MicrosoftMonitoringAgent",
                        "NetworkWatcherAgentWindows",
                        "DependencyAgentWindows"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "AzureDiskEncryption",
                        "typeHandlerVersion": "2.2",
                        "autoUpgradeMinorVersion": true,
                        "forceUpdateTag": "[guid(deployment().name)]",
                        "settings": {
                            "EncryptionOperation": "EnableEncryption",
                            "KeyVaultURL": "[reference(variables('KeyVaultResourceId'),'2016-10-01').vaultUri]",
                            "KeyVaultResourceId": "[variables('KeyVaultResourceID')]",
                            "KeyEncryptionKeyURL": "[parameters('KeyEncryptionKeyURL')]",
                            "KekVaultResourceId": "[variables('KeyVaultResourceID')]",
                            "KeyEncryptionAlgorithm": "RSA-OAEP",
                            "VolumeType": "All",
                            "ResizeOSDisk": false
                        }
                    }
                },
                {
                    "comments": "---------- DSC EXTENSION ----------",
                    "type": "extensions",
                    "name": "DSC",
                    "apiVersion": "2018-06-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('vmdc', parameters('Environment'), resourceGroup().location, '0')]",
                        "AzureDiskEncryption"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.77",
                        "autoUpgradeMinorVersion": true,
                        "protectedSettings": {
                            "Items": {
                                "registrationKeyPrivate": "[listKeys(resourceId(concat('rg-shared-', parameters('Environment'),'-', resourceGroup().location), 'Microsoft.Automation/automationAccounts/', concat('aa', parameters('DomainAbbreviation'), parameters('Environment'), resourceGroup().location)), '2018-06-30').Keys[0].value]"
                            }
                        },
                        "settings": {
                            "Properties": [
                                {
                                    "Name": "RegistrationKey",
                                    "Value": {
                                        "UserName": "PLACEHOLDER_DONOTUSE",
                                        "Password": "PrivateSettingsRef:registrationKeyPrivate"
                                    },
                                    "TypeName": "System.Management.Automation.PSCredential"
                                },
                                {
                                    "Name": "RegistrationUrl",
                                    "Value": "[reference(resourceId(concat('rg-shared-', parameters('Environment'),'-', resourceGroup().location),'Microsoft.Automation/automationAccounts/', concat('aa', parameters('DomainAbbreviation'), parameters('Environment'), resourceGroup().location))).registrationUrl]",
                                    "TypeName": "System.String"
                                },
                                {
                                    "Name": "NodeConfigurationName",
                                    "Value": "[parameters('nodeConfigurationName')]",
                                    "TypeName": "System.String"
                                }
                            ]
                        }
                    }
                }
            ]
        }
    ]
}
