{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "DcCount": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 2,
            "metadata": {
                "description": "Count of Domain Controllers"
            }
        },
        "Environment": {
            "type": "string",
            "allowedValues": [
                "dev",
                "prod",
                "qa",
                "sandbox",
                "shared",
                "stage",
                "test"
            ],
            "metadata": {
                "description": "The operating environment of the workload"
            }
        },
        "VmPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Local Admin Password for Virtual Machines"
            }
        },
        "VmUsername": {
            "type": "securestring",
            "metadata": {
                "description": "Local Admin Username of Virtual Machines"
            }
        }
    },
    "variables": {
    },
    "resources": [
        {
            "name": "[concat('as-vmdc', parameters('Environment'), resourceGroup().location)]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2019-07-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "name": "[concat('nic-vmdc', parameters('Environment'), resourceGroup().location, copyIndex(), '-0')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "tags": {
            },
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('DcCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig0",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat('10.0.1.', copyIndex(4))]",
                            "subnet": {
                                "id": "[resourceId('network','Microsoft.Network/virtualNetworks/subnets', concat('vnet-', parameters('Environment'), resourceGroup().location), concat('snet-shared-', resourceGroup().location, '-servers'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat('vmdc', parameters('Environment'), resourceGroup().location, copyIndex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('DcCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-vmdc', parameters('Environment'), resourceGroup().location, copyIndex(), '-0'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', concat('as-vmdc', parameters('Environment'), resourceGroup().location))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A1_v2"
                },
                "osProfile": {
                    "computerName": "[concat('vmdc', parameters('Environment'), resourceGroup().location, copyIndex())]",
                    "adminUsername": "[parameters('VmUsername')]",
                    "adminPassword": "[parameters('VmPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat('disk-vmdc', parameters('Environment'), resourceGroup().location, copyIndex(), '-0')]",
                        "caching": "None",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }

                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('nic-vmdc', parameters('Environment'), resourceGroup().location, copyIndex(), '-0'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat('as-vmdc', parameters('Environment'), resourceGroup().location))]"
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "apiVersion": "2017-03-30",
                    "name": "AzureNetworkWatcherExtension",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('vmdc', parameters('Environment'), resourceGroup().location, copyIndex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.NetworkWatcher",
                        "type": "NetworkWatcherAgentWindows",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                        }
                    }
                }
            ]
        }
    ],
    "outputs": {
    },
    "functions": [
    ]
}