{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.11.1.770",
      "templateHash": "17209540196229115841"
    }
  },
  "parameters": {
    "ActionGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the action group for sending emails to a distribution group."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/jamasten/Azure/master/solutions/autoIncreasePremiumFileShareQuota/artifacts/",
      "metadata": {
        "description": "The URL prefix for linked resources."
      }
    },
    "_artifactsLocationSasToken": {
      "type": "secureString",
      "defaultValue": "",
      "metadata": {
        "description": "The SAS Token for the scripts if they are stored on an Azure Storage Account."
      }
    },
    "AutomationAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Automation Account."
      }
    },
    "DistributionGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The distribution group to send alerts to when the file share quota increases."
      }
    },
    "FileShareNames": {
      "type": "array",
      "metadata": {
        "description": "The names of the files shares on Azure Files Premium."
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The Azure deployment location for the Azure resources."
      }
    },
    "LogAnalyticsWorkspaceResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource ID for the Log Analytics Workspace to collect runbook logs for alerting and dashboards."
      }
    },
    "LogicAppPrefix": {
      "type": "string",
      "metadata": {
        "description": "The name prefix of the Logic App used to trigger the runbook in the Automation Account."
      }
    },
    "StorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Storage Account with Azure Files Premium."
      }
    },
    "StorageResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group name of the Azure Storage Account with Azure Files Premium."
      }
    },
    "Tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "The tags are metadata that will be appended to each Azure resource."
      }
    },
    "Timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('u')]",
      "metadata": {
        "description": "ISO 8601 timestamp used to determine the webhook expiration date.  The webhook is hardcoded to expire 5 years after the timestamp."
      }
    }
  },
  "variables": {
    "Environment": "[environment().name]",
    "StorageAccountContributor": "17d1049b-9a84-46fb-8f53-869881c3d3ab",
    "SubscriptionId": "[subscription().subscriptionId]"
  },
  "resources": [
    {
      "type": "Microsoft.Automation/automationAccounts",
      "apiVersion": "2021-06-22",
      "name": "[parameters('AutomationAccountName')]",
      "location": "[parameters('Location')]",
      "tags": "[parameters('Tags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "sku": {
          "name": "Free"
        }
      }
    },
    {
      "condition": "[not(empty(parameters('LogAnalyticsWorkspaceResourceId')))]",
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "scope": "[format('Microsoft.Automation/automationAccounts/{0}', parameters('AutomationAccountName'))]",
      "name": "[format('diag-{0}', parameters('AutomationAccountName'))]",
      "properties": {
        "logs": [
          {
            "category": "JobLogs",
            "enabled": true
          },
          {
            "category": "JobStreams",
            "enabled": true
          }
        ],
        "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('LogAnalyticsWorkspaceResourceId')))]",
      "type": "microsoft.insights/actionGroups",
      "apiVersion": "2019-06-01",
      "name": "[parameters('ActionGroupName')]",
      "tags": "[parameters('Tags')]",
      "location": "global",
      "properties": {
        "groupShortName": "EmailAlerts",
        "enabled": true,
        "emailReceivers": [
          {
            "name": "[parameters('DistributionGroup')]",
            "emailAddress": "[parameters('DistributionGroup')]",
            "useCommonAlertSchema": true
          }
        ]
      }
    },
    {
      "condition": "[not(empty(parameters('LogAnalyticsWorkspaceResourceId')))]",
      "type": "Microsoft.Insights/scheduledQueryRules",
      "apiVersion": "2021-08-01",
      "name": "Premium File Share Quota Increased",
      "location": "[parameters('Location')]",
      "tags": "[parameters('Tags')]",
      "properties": {
        "actions": {
          "actionGroups": [
            "[resourceId('microsoft.insights/actionGroups', parameters('ActionGroupName'))]"
          ],
          "customProperties": {}
        },
        "criteria": {
          "allOf": [
            {
              "query": "AzureDiagnostics\n| where ResourceProvider == \"MICROSOFT.AUTOMATION\"\n| where Category  == \"JobStreams\"\n| where ResultDescription has \"Increasing the file share quota\"",
              "timeAggregation": "Count",
              "dimensions": [
                {
                  "name": "ResultDescription",
                  "operator": "Include",
                  "values": [
                    "*"
                  ]
                }
              ],
              "operator": "GreaterThanOrEqual",
              "threshold": 1,
              "failingPeriods": {
                "numberOfEvaluationPeriods": 1,
                "minFailingPeriodsToAlert": 1
              }
            }
          ]
        },
        "displayName": "Premium File Share Quota Increased",
        "description": "Sends an informational alert when the Runbook in the Automation Account increases the quota on a file share in Azure Files Premium.",
        "enabled": true,
        "evaluationFrequency": "PT5M",
        "scopes": [
          "[parameters('LogAnalyticsWorkspaceResourceId')]"
        ],
        "severity": 3,
        "windowSize": "PT5M"
      },
      "dependsOn": [
        "[resourceId('microsoft.insights/actionGroups', parameters('ActionGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "apiVersion": "2019-06-01",
      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), 'AvdScaleFileShareQuota')]",
      "location": "[parameters('Location')]",
      "tags": "[parameters('Tags')]",
      "properties": {
        "runbookType": "PowerShell",
        "logProgress": false,
        "logVerbose": false,
        "publishContentLink": {
          "uri": "[format('{0}Set-FileShareScaling.ps1{1}', parameters('_artifactsLocation'), parameters('_artifactsLocationSasToken'))]",
          "version": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/webhooks",
      "apiVersion": "2015-10-31",
      "name": "[format('{0}/{1}', parameters('AutomationAccountName'), format('{0}_{1}', 'AvdScaleFileShareQuota', dateTimeAdd(parameters('Timestamp'), 'PT0H', 'yyyyMMddhhmmss')))]",
      "properties": {
        "isEnabled": true,
        "expiryTime": "[dateTimeAdd(parameters('Timestamp'), 'P5Y')]",
        "runbook": {
          "name": "AvdScaleFileShareQuota"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName'))]",
        "[resourceId('Microsoft.Automation/automationAccounts/runbooks', parameters('AutomationAccountName'), 'AvdScaleFileShareQuota')]"
      ]
    },
    {
      "copy": {
        "name": "logicApps",
        "count": "[length(range(0, length(parameters('FileShareNames'))))]"
      },
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2016-06-01",
      "name": "[format('{0}-{1}-{2}', parameters('LogicAppPrefix'), parameters('StorageAccountName'), parameters('FileShareNames')[range(0, length(parameters('FileShareNames')))[copyIndex()]])]",
      "location": "[parameters('Location')]",
      "tags": "[parameters('Tags')]",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "HTTP": {
              "type": "Http",
              "inputs": {
                "method": "POST",
                "uri": "[reference(resourceId('Microsoft.Automation/automationAccounts/webhooks', parameters('AutomationAccountName'), format('{0}_{1}', 'AvdScaleFileShareQuota', dateTimeAdd(parameters('Timestamp'), 'PT0H', 'yyyyMMddhhmmss')))).uri]",
                "body": {
                  "Environment": "[variables('Environment')]",
                  "FileShareName": "[parameters('FileShareNames')[range(0, length(parameters('FileShareNames')))[copyIndex()]]]",
                  "ResourceGroupName": "[parameters('StorageResourceGroupName')]",
                  "StorageAccountName": "[parameters('StorageAccountName')]",
                  "SubscriptionId": "[variables('SubscriptionId')]"
                }
              }
            }
          },
          "triggers": {
            "Recurrence": {
              "type": "Recurrence",
              "recurrence": {
                "frequency": "Minute",
                "interval": 15
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts/webhooks', parameters('AutomationAccountName'), format('{0}_{1}', 'AvdScaleFileShareQuota', dateTimeAdd(parameters('Timestamp'), 'PT0H', 'yyyyMMddhhmmss')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('RoleAssignment_{0}', parameters('StorageResourceGroupName'))]",
      "resourceGroup": "[parameters('StorageResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "AutomationAccountId": {
            "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('AutomationAccountName')), '2021-06-22', 'Full').identity.principalId]"
          },
          "RoleDefinitionId": {
            "value": "[variables('StorageAccountContributor')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "7968870233891727192"
            }
          },
          "parameters": {
            "AutomationAccountId": {
              "type": "string"
            },
            "RoleDefinitionId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('AutomationAccountId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleDefinitionId'))]",
                "principalId": "[parameters('AutomationAccountId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      }
    }
  ]
}