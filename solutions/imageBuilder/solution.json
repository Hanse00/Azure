{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.9.1.41621",
      "templateHash": "12341318263025822108"
    }
  },
  "parameters": {
    "Environment": {
      "type": "string",
      "defaultValue": "d",
      "metadata": {
        "description": "The target environment for the solution."
      },
      "allowedValues": [
        "d",
        "p",
        "s",
        "t"
      ]
    },
    "ImageDefinitionName": {
      "type": "string",
      "defaultValue": "Win10-21h2-VDOT-g2",
      "metadata": {
        "description": "The name of the Image Definition for the Shared Image Gallery."
      }
    },
    "ImageOffer": {
      "type": "string",
      "defaultValue": "office-365",
      "metadata": {
        "description": "The offer of the marketplace image."
      }
    },
    "ImagePublisher": {
      "type": "string",
      "defaultValue": "microsoftwindowsdesktop",
      "metadata": {
        "description": "The publisher of the marketplace image."
      }
    },
    "ImageSku": {
      "type": "string",
      "defaultValue": "win10-21h2-avd-m365-g2",
      "metadata": {
        "description": "The SKU of the marketplace image."
      }
    },
    "ImageVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "The version of the marketplace image."
      }
    },
    "ImageStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "The storage SKU for the image version replica in the Shared Image Gallery."
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "The location for the resources deployed in this solution."
      }
    },
    "StorageAccountName": {
      "type": "string",
      "defaultValue": "stshdsvcdeu000",
      "metadata": {
        "description": "The name for the storage account containing the scripts & application installers."
      }
    },
    "StorageAccountResourceGroupName": {
      "type": "string",
      "defaultValue": "rg-shd-svc-d-eu-000",
      "metadata": {
        "description": "The resource group name for the storage account containing the scripts & application installers."
      }
    },
    "StorageContainerName": {
      "type": "string",
      "defaultValue": "artifacts",
      "metadata": {
        "description": "The name of the container in the storage account containing the scripts & application installers."
      }
    },
    "SubnetName": {
      "type": "string",
      "defaultValue": "Clients",
      "metadata": {
        "description": "The subnet name for the custom virtual network."
      }
    },
    "Timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('yyyyMMddhhmmss')]",
      "metadata": {
        "description": ""
      }
    },
    "VirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "The size of the virtual machine used for creating the image.  The recommendation is to use a 'Standard_D2_v2' size or greater for AVD. https://github.com/danielsollondon/azvmimagebuilder/tree/master/solutions/14_Building_Images_WVD"
      }
    },
    "VirtualNetworkName": {
      "type": "string",
      "defaultValue": "vnet-shd-net-d-eu-000",
      "metadata": {
        "description": "The name for the custom virtual network."
      }
    },
    "VirtualNetworkResourceGroupName": {
      "type": "string",
      "defaultValue": "rg-shd-net-d-eu-000",
      "metadata": {
        "description": "The resource group name for the custom virtual network."
      }
    }
  },
  "variables": {
    "LocationShortNames": {
      "australiacentral": "ac",
      "australiacentral2": "ac2",
      "australiaeast": "ae",
      "australiasoutheast": "as",
      "brazilsouth": "bs2",
      "brazilsoutheast": "bs",
      "canadacentral": "cc",
      "canadaeast": "ce",
      "centralindia": "ci",
      "centralus": "cu",
      "chinaeast": "ce",
      "chinaeast2": "ce2",
      "chinanorth": "cn",
      "chinanorth2": "cn2",
      "eastasia": "ea",
      "eastus": "eu",
      "eastus2": "eu2",
      "francecentral": "fc",
      "francesouth": "fs",
      "germanynorth": "gn",
      "germanywestcentral": "gwc",
      "japaneast": "je",
      "japanwest": "jw",
      "jioindiawest": "jiw",
      "koreacentral": "kc",
      "koreasouth": "ks",
      "northcentralus": "ncu",
      "northeurope": "ne2",
      "norwayeast": "ne",
      "norwaywest": "nw",
      "southafricanorth": "san",
      "southafricawest": "saw",
      "southcentralus": "scu",
      "southindia": "si",
      "southeastasia": "sa",
      "switzerlandnorth": "sn",
      "switzerlandwest": "sw",
      "uaecentral": "uc",
      "uaenorth": "un",
      "uksouth": "us",
      "ukwest": "uw",
      "usdodcentral": "uc",
      "usdodeast": "ue",
      "usgovarizona": "az",
      "usgoviowa": "io",
      "usgovtexas": "tx",
      "usgovvirginia": "va",
      "westcentralus": "wcu",
      "westeurope": "we",
      "westindia": "wi",
      "westus": "wu",
      "westus2": "wu2",
      "westus3": "wu3"
    },
    "LocationShortName": "[variables('LocationShortNames')[parameters('Location')]]",
    "ResourceGroup": "[format('rg-aib-{0}-{1}', parameters('Environment'), variables('LocationShortName'))]",
    "Roles": [
      {
        "resourceGroup": "[parameters('VirtualNetworkResourceGroupName')]",
        "name": "Virtual Network Join",
        "description": "Allow resources to join a subnet",
        "permissions": [
          {
            "actions": [
              "Microsoft.Network/virtualNetworks/read",
              "Microsoft.Network/virtualNetworks/subnets/read",
              "Microsoft.Network/virtualNetworks/subnets/join/action"
            ]
          }
        ]
      },
      {
        "resourceGroup": "[variables('ResourceGroup')]",
        "name": "Image Template Contributor",
        "description": "Allow the creation and management of images",
        "permissions": [
          {
            "actions": [
              "Microsoft.Compute/galleries/read",
              "Microsoft.Compute/galleries/images/read",
              "Microsoft.Compute/galleries/images/versions/read",
              "Microsoft.Compute/galleries/images/versions/write",
              "Microsoft.Compute/images/read",
              "Microsoft.Compute/images/write",
              "Microsoft.Compute/images/delete"
            ]
          }
        ]
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2019-10-01",
      "name": "[variables('ResourceGroup')]",
      "location": "[parameters('Location')]",
      "properties": {}
    },
    {
      "copy": {
        "name": "roleDefinitions",
        "count": "[length(range(0, length(variables('Roles'))))]"
      },
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2015-07-01",
      "name": "[guid(variables('Roles')[range(0, length(variables('Roles')))[copyIndex()]].name, subscription().id)]",
      "properties": {
        "roleName": "[variables('Roles')[range(0, length(variables('Roles')))[copyIndex()]].name]",
        "description": "[variables('Roles')[range(0, length(variables('Roles')))[copyIndex()]].description]",
        "permissions": "[variables('Roles')[range(0, length(variables('Roles')))[copyIndex()]].permissions]",
        "assignableScopes": [
          "[subscription().id]"
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('UserAssignedIdentity_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[variables('ResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Environment": {
            "value": "[parameters('Environment')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LocationShortName": {
            "value": "[variables('LocationShortName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.9.1.41621",
              "templateHash": "17009310437047113405"
            }
          },
          "parameters": {
            "Environment": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LocationShortName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[format('uai-aib-{0}-{1}', parameters('Environment'), parameters('LocationShortName'))]",
              "location": "[parameters('Location')]"
            }
          ],
          "outputs": {
            "userAssignedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('uai-aib-{0}-{1}', parameters('Environment'), parameters('LocationShortName')))).principalId]"
            },
            "userAssignedIdentityResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('uai-aib-{0}-{1}', parameters('Environment'), parameters('LocationShortName')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('ResourceGroup'))]"
      ]
    },
    {
      "copy": {
        "name": "roleAssignments",
        "count": "[length(range(0, length(variables('Roles'))))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('RoleAssignments_{0}_{1}', variables('Roles')[range(0, length(variables('Roles')))[copyIndex()]].resourceGroup, parameters('Timestamp'))]",
      "resourceGroup": "[variables('Roles')[range(0, length(variables('Roles')))[copyIndex()]].resourceGroup]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "PrincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroup')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp')))).outputs.userAssignedIdentityPrincipalId.value]"
          },
          "RoleDefinitionId": {
            "value": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', guid(variables('Roles')[range(0, length(variables('Roles')))[range(0, length(variables('Roles')))[copyIndex()]]].name, subscription().id))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.9.1.41621",
              "templateHash": "3650947858120910035"
            }
          },
          "parameters": {
            "PrincipalId": {
              "type": "string"
            },
            "RoleDefinitionId": {
              "type": "string"
            },
            "StorageAccountName": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "condition": "[not(empty(parameters('StorageAccountName')))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('StorageAccountName'))]",
              "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[parameters('RoleDefinitionId')]",
                "principalId": "[parameters('PrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[empty(parameters('StorageAccountName'))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[parameters('RoleDefinitionId')]",
                "principalId": "[parameters('PrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', guid(variables('Roles')[range(0, length(variables('Roles')))[range(0, length(variables('Roles')))[copyIndex()]]].name, subscription().id))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroup')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('RoleAssignment_{0}_{1}', parameters('StorageAccountName'), parameters('Timestamp'))]",
      "resourceGroup": "[parameters('StorageAccountResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "PrincipalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroup')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp')))).outputs.userAssignedIdentityPrincipalId.value]"
          },
          "RoleDefinitionId": {
            "value": "[resourceId('Microsoft.Authorization/roleDefinitions', '2a2b9908-6ea1-4ae2-8e65-a410df84e7d1')]"
          },
          "StorageAccountName": {
            "value": "[parameters('StorageAccountName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.9.1.41621",
              "templateHash": "3650947858120910035"
            }
          },
          "parameters": {
            "PrincipalId": {
              "type": "string"
            },
            "RoleDefinitionId": {
              "type": "string"
            },
            "StorageAccountName": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "condition": "[not(empty(parameters('StorageAccountName')))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('StorageAccountName'))]",
              "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[parameters('RoleDefinitionId')]",
                "principalId": "[parameters('PrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "condition": "[empty(parameters('StorageAccountName'))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('PrincipalId'), parameters('RoleDefinitionId'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[parameters('RoleDefinitionId')]",
                "principalId": "[parameters('PrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroup')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('ComputeGallery_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[variables('ResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Environment": {
            "value": "[parameters('Environment')]"
          },
          "ImageDefinitionName": {
            "value": "[parameters('ImageDefinitionName')]"
          },
          "ImageOffer": {
            "value": "[parameters('ImageOffer')]"
          },
          "ImagePublisher": {
            "value": "[parameters('ImagePublisher')]"
          },
          "ImageSku": {
            "value": "[parameters('ImageSku')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LocationShortName": {
            "value": "[variables('LocationShortName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.9.1.41621",
              "templateHash": "15512047473792183514"
            }
          },
          "parameters": {
            "Environment": {
              "type": "string"
            },
            "ImageDefinitionName": {
              "type": "string"
            },
            "ImageOffer": {
              "type": "string"
            },
            "ImagePublisher": {
              "type": "string"
            },
            "ImageSku": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LocationShortName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Compute/galleries",
              "apiVersion": "2022-01-03",
              "name": "[format('cg_aib_{0}_{1}', parameters('Environment'), parameters('LocationShortName'))]",
              "location": "[parameters('Location')]"
            },
            {
              "type": "Microsoft.Compute/galleries/images",
              "apiVersion": "2022-01-03",
              "name": "[format('{0}/{1}', format('cg_aib_{0}_{1}', parameters('Environment'), parameters('LocationShortName')), parameters('ImageDefinitionName'))]",
              "location": "[parameters('Location')]",
              "properties": {
                "osType": "Windows",
                "osState": "Generalized",
                "hyperVGeneration": "[if(contains(parameters('ImageSku'), '-g2'), 'V2', 'V1')]",
                "identifier": {
                  "publisher": "[parameters('ImagePublisher')]",
                  "offer": "[parameters('ImageOffer')]",
                  "sku": "[parameters('ImageSku')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/galleries', format('cg_aib_{0}_{1}', parameters('Environment'), parameters('LocationShortName')))]"
              ]
            }
          ],
          "outputs": {
            "ImageDefinitionResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/galleries/images', format('cg_aib_{0}_{1}', parameters('Environment'), parameters('LocationShortName')), parameters('ImageDefinitionName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('ResourceGroup'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('ImageTemplate_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[variables('ResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "Environment": {
            "value": "[parameters('Environment')]"
          },
          "ImageDefinitionName": {
            "value": "[parameters('ImageDefinitionName')]"
          },
          "ImageDefinitionResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroup')), 'Microsoft.Resources/deployments', format('ComputeGallery_{0}', parameters('Timestamp')))).outputs.ImageDefinitionResourceId.value]"
          },
          "ImageOffer": {
            "value": "[parameters('ImageOffer')]"
          },
          "ImagePublisher": {
            "value": "[parameters('ImagePublisher')]"
          },
          "ImageSku": {
            "value": "[parameters('ImageSku')]"
          },
          "ImageStorageAccountType": {
            "value": "[parameters('ImageStorageAccountType')]"
          },
          "ImageVersion": {
            "value": "[parameters('ImageVersion')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LocationShortName": {
            "value": "[variables('LocationShortName')]"
          },
          "StorageAccountName": {
            "value": "[parameters('StorageAccountName')]"
          },
          "StorageContainerName": {
            "value": "[parameters('StorageContainerName')]"
          },
          "SubnetName": {
            "value": "[parameters('SubnetName')]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          },
          "UserAssignedIdentityResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroup')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp')))).outputs.userAssignedIdentityResourceId.value]"
          },
          "VirtualMachineSize": {
            "value": "[parameters('VirtualMachineSize')]"
          },
          "VirtualNetworkName": {
            "value": "[parameters('VirtualNetworkName')]"
          },
          "VirtualNetworkResourceGroupName": {
            "value": "[parameters('VirtualNetworkResourceGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.9.1.41621",
              "templateHash": "7212758985043412110"
            }
          },
          "parameters": {
            "Environment": {
              "type": "string"
            },
            "ImageDefinitionName": {
              "type": "string"
            },
            "ImageDefinitionResourceId": {
              "type": "string"
            },
            "ImageOffer": {
              "type": "string"
            },
            "ImagePublisher": {
              "type": "string"
            },
            "ImageSku": {
              "type": "string"
            },
            "ImageStorageAccountType": {
              "type": "string"
            },
            "ImageVersion": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LocationShortName": {
              "type": "string"
            },
            "StorageAccountName": {
              "type": "string"
            },
            "StorageContainerName": {
              "type": "string"
            },
            "SubnetName": {
              "type": "string"
            },
            "Timestamp": {
              "type": "string"
            },
            "UserAssignedIdentityResourceId": {
              "type": "string"
            },
            "VirtualMachineSize": {
              "type": "string"
            },
            "VirtualNetworkName": {
              "type": "string"
            },
            "VirtualNetworkResourceGroupName": {
              "type": "string"
            }
          },
          "variables": {
            "StorageUri": "[format('https://{0}.{1}/{2}/', parameters('StorageAccountName'), environment().suffixes.storage, parameters('StorageContainerName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.VirtualMachineImages/imageTemplates",
              "apiVersion": "2022-02-14",
              "name": "[format('imgt-{0}-{1}-{2}', toLower(parameters('ImageDefinitionName')), parameters('Environment'), parameters('LocationShortName'))]",
              "location": "[parameters('Location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('UserAssignedIdentityResourceId'))]": {}
                }
              },
              "properties": {
                "stagingResourceGroup": "[format('/subscriptions/{0}/resourceGroups/rg-aib-staging-{1}-{2}-{3}', subscription().subscriptionId, toLower(parameters('ImageDefinitionName')), parameters('Environment'), parameters('LocationShortName'))]",
                "buildTimeoutInMinutes": 300,
                "vmProfile": {
                  "vmSize": "[parameters('VirtualMachineSize')]",
                  "vnetConfig": "[if(not(empty(parameters('SubnetName'))), createObject('subnetId', resourceId(parameters('VirtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetworkName'), parameters('SubnetName'))), null())]"
                },
                "source": {
                  "type": "PlatformImage",
                  "publisher": "[parameters('ImagePublisher')]",
                  "offer": "[parameters('ImageOffer')]",
                  "sku": "[parameters('ImageSku')]",
                  "version": "[parameters('ImageVersion')]"
                },
                "customize": [
                  {
                    "type": "PowerShell",
                    "name": "Virtual Desktop Optimization Tool",
                    "runElevated": true,
                    "runAsSystem": true,
                    "scriptUri": "[format('{0}vdot.ps1', variables('StorageUri'))]"
                  },
                  {
                    "type": "WindowsRestart",
                    "restartCheckCommand": "write-host 'Restarting post VDOT'",
                    "restartTimeout": "5m"
                  },
                  {
                    "type": "WindowsUpdate",
                    "searchCriteria": "IsInstalled=0",
                    "filters": [
                      "exclude:$_.Title -like '*Preview*'",
                      "include:$true"
                    ]
                  }
                ],
                "distribute": [
                  {
                    "type": "SharedImage",
                    "galleryImageId": "[parameters('ImageDefinitionResourceId')]",
                    "runOutputName": "[parameters('Timestamp')]",
                    "artifactTags": {},
                    "replicationRegions": [
                      "[parameters('Location')]"
                    ],
                    "storageAccountType": "[parameters('ImageStorageAccountType')]"
                  }
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroup')), 'Microsoft.Resources/deployments', format('ComputeGallery_{0}', parameters('Timestamp')))]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('ResourceGroup'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('StorageAccountResourceGroupName')), 'Microsoft.Resources/deployments', format('RoleAssignment_{0}_{1}', parameters('StorageAccountName'), parameters('Timestamp')))]",
        "roleAssignments",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('ResourceGroup')), 'Microsoft.Resources/deployments', format('UserAssignedIdentity_{0}', parameters('Timestamp')))]"
      ]
    }
  ]
}