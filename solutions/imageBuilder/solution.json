{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.8.9.13224",
      "templateHash": "7296075608982239650"
    }
  },
  "parameters": {
    "CustomVnet": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Determines whether the Image Builder VM will be deployed to custom Virtual Network or use the default Virtual Network."
      }
    },
    "Environment": {
      "type": "string",
      "defaultValue": "d",
      "metadata": {
        "description": "The target environment for the solution."
      },
      "allowedValues": [
        "d",
        "p",
        "s",
        "t"
      ]
    },
    "ImageDefinitionName": {
      "type": "string",
      "defaultValue": "Win10-21h2-VDOT",
      "metadata": {
        "description": "The name of the Image Definition for the Shared Image Gallery."
      }
    },
    "ImageOffer": {
      "type": "string",
      "defaultValue": "office-365",
      "metadata": {
        "description": "The offer of the marketplace image."
      }
    },
    "ImagePublisher": {
      "type": "string",
      "defaultValue": "microsoftwindowsdesktop",
      "metadata": {
        "description": "The publisher of the marketplace image."
      }
    },
    "ImageSku": {
      "type": "string",
      "defaultValue": "win10-21h2-avd-m365-g2",
      "metadata": {
        "description": "The SKU of the marketplace image."
      }
    },
    "ImageVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "The version of the marketplace image."
      }
    },
    "ImageStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "The storage SKU for the image version replica in the Shared Image Gallery."
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "The location for the resources deployed in this solution."
      }
    },
    "SubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The subnet name for the custom virtual network."
      }
    },
    "Timestamp": {
      "type": "string",
      "defaultValue": "[utcNow('yyyyMMddhhmmss')]",
      "metadata": {
        "description": ""
      }
    },
    "VirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "The size of the virtual machine used for creating the image.  The recommendation is to use a 'Standard_D2_v2' size or greater for AVD. https://github.com/danielsollondon/azvmimagebuilder/tree/master/solutions/14_Building_Images_WVD"
      }
    },
    "VirtualNetworkName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name for the custom virtual network."
      }
    },
    "VirtualNetworkResourceGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource group name for the custom virtual network."
      }
    }
  },
  "variables": {
    "LocationShortNames": {
      "australiacentral": "ac",
      "australiacentral2": "ac2",
      "australiaeast": "ae",
      "australiasoutheast": "as",
      "brazilsouth": "bs2",
      "brazilsoutheast": "bs",
      "canadacentral": "cc",
      "canadaeast": "ce",
      "centralindia": "ci",
      "centralus": "cu",
      "chinaeast": "ce",
      "chinaeast2": "ce2",
      "chinanorth": "cn",
      "chinanorth2": "cn2",
      "eastasia": "ea",
      "eastus": "eu",
      "eastus2": "eu2",
      "francecentral": "fc",
      "francesouth": "fs",
      "germanynorth": "gn",
      "germanywestcentral": "gwc",
      "japaneast": "je",
      "japanwest": "jw",
      "jioindiawest": "jiw",
      "koreacentral": "kc",
      "koreasouth": "ks",
      "northcentralus": "ncu",
      "northeurope": "ne2",
      "norwayeast": "ne",
      "norwaywest": "nw",
      "southafricanorth": "san",
      "southafricawest": "saw",
      "southcentralus": "scu",
      "southindia": "si",
      "southeastasia": "sa",
      "switzerlandnorth": "sn",
      "switzerlandwest": "sw",
      "uaecentral": "uc",
      "uaenorth": "un",
      "uksouth": "us",
      "ukwest": "uw",
      "usdodcentral": "uc",
      "usdodeast": "ue",
      "usgovarizona": "az",
      "usgoviowa": "io",
      "usgovtexas": "tx",
      "usgovvirginia": "va",
      "westcentralus": "wcu",
      "westeurope": "we",
      "westindia": "wi",
      "westus": "wu",
      "westus2": "wu2",
      "westus3": "wu3"
    },
    "LocationShortName": "[variables('LocationShortNames')[parameters('Location')]]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2019-10-01",
      "name": "[format('rg-aib-{0}-{1}', parameters('Environment'), variables('LocationShortName'))]",
      "location": "[parameters('Location')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2015-07-01",
      "name": "[guid(subscription().id, 'ImageContributor')]",
      "properties": {
        "roleName": "Image Contributor",
        "description": "Allow the creation and management of images",
        "permissions": [
          {
            "actions": [
              "Microsoft.Compute/galleries/read",
              "Microsoft.Compute/galleries/images/read",
              "Microsoft.Compute/galleries/images/versions/read",
              "Microsoft.Compute/galleries/images/versions/write",
              "Microsoft.Compute/images/read",
              "Microsoft.Compute/images/write",
              "Microsoft.Compute/images/delete"
            ],
            "notActions": []
          }
        ],
        "assignableScopes": [
          "[subscription().id]"
        ]
      }
    },
    {
      "condition": "[parameters('CustomVnet')]",
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2015-07-01",
      "name": "[guid(subscription().id, 'VnetJoin')]",
      "properties": {
        "roleName": "VNET Join",
        "description": "Allow resources to join a subnet",
        "permissions": [
          {
            "actions": [
              "Microsoft.Network/virtualNetworks/read",
              "Microsoft.Network/virtualNetworks/subnets/read",
              "Microsoft.Network/virtualNetworks/subnets/join/action"
            ],
            "notActions": []
          }
        ],
        "assignableScopes": [
          "[subscription().id]"
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('ImageBuilder_{0}', parameters('Timestamp'))]",
      "resourceGroup": "[format('rg-aib-{0}-{1}', parameters('Environment'), variables('LocationShortName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "CustomVnet": {
            "value": "[parameters('CustomVnet')]"
          },
          "Environment": {
            "value": "[parameters('Environment')]"
          },
          "ImageDefinitionName": {
            "value": "[parameters('ImageDefinitionName')]"
          },
          "ImageOffer": {
            "value": "[parameters('ImageOffer')]"
          },
          "ImagePublisher": {
            "value": "[parameters('ImagePublisher')]"
          },
          "ImageSku": {
            "value": "[parameters('ImageSku')]"
          },
          "ImageVersion": {
            "value": "[parameters('ImageVersion')]"
          },
          "ImageStorageAccountType": {
            "value": "[parameters('ImageStorageAccountType')]"
          },
          "Location": {
            "value": "[parameters('Location')]"
          },
          "LocationShortName": {
            "value": "[variables('LocationShortName')]"
          },
          "RoleImageContributor": {
            "value": "[guid(subscription().id, 'ImageContributor')]"
          },
          "RoleVirtualNetworkJoin": {
            "value": "[guid(subscription().id, 'VnetJoin')]"
          },
          "SubnetName": {
            "value": "[parameters('SubnetName')]"
          },
          "Timestamp": {
            "value": "[parameters('Timestamp')]"
          },
          "VirtualMachineSize": {
            "value": "[parameters('VirtualMachineSize')]"
          },
          "VirtualNetworkName": {
            "value": "[parameters('VirtualNetworkName')]"
          },
          "VirtualNetworkResourceGroupName": {
            "value": "[parameters('VirtualNetworkResourceGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "17952413600808689835"
            }
          },
          "parameters": {
            "CustomVnet": {
              "type": "bool"
            },
            "Environment": {
              "type": "string"
            },
            "ImageDefinitionName": {
              "type": "string"
            },
            "ImageOffer": {
              "type": "string"
            },
            "ImagePublisher": {
              "type": "string"
            },
            "ImageSku": {
              "type": "string"
            },
            "ImageStorageAccountType": {
              "type": "string"
            },
            "ImageVersion": {
              "type": "string"
            },
            "Location": {
              "type": "string"
            },
            "LocationShortName": {
              "type": "string"
            },
            "RoleImageContributor": {
              "type": "string"
            },
            "RoleVirtualNetworkJoin": {
              "type": "string"
            },
            "SubnetName": {
              "type": "string"
            },
            "Timestamp": {
              "type": "string"
            },
            "VirtualMachineSize": {
              "type": "string"
            },
            "VirtualNetworkName": {
              "type": "string"
            },
            "VirtualNetworkResourceGroupName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[format('uai-aib-{0}-{1}', parameters('Environment'), parameters('LocationShortName'))]",
              "location": "[parameters('Location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2018-09-01-preview",
              "name": "[guid(format('uai-aib-{0}-{1}', parameters('Environment'), parameters('LocationShortName')), parameters('RoleImageContributor'), resourceGroup().id)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('RoleImageContributor'))]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('uai-aib-{0}-{1}', parameters('Environment'), parameters('LocationShortName'))), '2018-11-30', 'Full').properties.principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('uai-aib-{0}-{1}', parameters('Environment'), parameters('LocationShortName')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/galleries",
              "apiVersion": "2022-01-03",
              "name": "[format('cg_aib_{0}_{1}', parameters('Environment'), parameters('LocationShortName'))]",
              "location": "[parameters('Location')]"
            },
            {
              "type": "Microsoft.Compute/galleries/images",
              "apiVersion": "2022-01-03",
              "name": "[format('{0}/{1}', format('cg_aib_{0}_{1}', parameters('Environment'), parameters('LocationShortName')), parameters('ImageDefinitionName'))]",
              "location": "[parameters('Location')]",
              "properties": {
                "osType": "Windows",
                "osState": "Generalized",
                "hyperVGeneration": "[if(contains(parameters('ImageSku'), '-g2'), 'V2', 'V1')]",
                "identifier": {
                  "publisher": "[parameters('ImagePublisher')]",
                  "offer": "[parameters('ImageOffer')]",
                  "sku": "[parameters('ImageSku')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/galleries', format('cg_aib_{0}_{1}', parameters('Environment'), parameters('LocationShortName')))]"
              ]
            },
            {
              "type": "Microsoft.VirtualMachineImages/imageTemplates",
              "apiVersion": "2022-02-14",
              "name": "[format('imgt-{0}-{1}-{2}', toLower(parameters('ImageDefinitionName')), parameters('Environment'), parameters('LocationShortName'))]",
              "location": "[parameters('Location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('uai-aib-{0}-{1}', parameters('Environment'), parameters('LocationShortName'))))]": {}
                }
              },
              "properties": {
                "stagingResourceGroup": "[format('/subscriptions/{0}/resourceGroups/rg-aib-staging-{1}-{2}-{3}', subscription().subscriptionId, toLower(parameters('ImageDefinitionName')), parameters('Environment'), parameters('LocationShortName'))]",
                "buildTimeoutInMinutes": 300,
                "vmProfile": {
                  "vmSize": "[parameters('VirtualMachineSize')]",
                  "vnetConfig": "[if(not(empty(parameters('SubnetName'))), createObject('subnetId', resourceId(parameters('VirtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetworkName'), parameters('SubnetName'))), null())]"
                },
                "source": {
                  "type": "PlatformImage",
                  "publisher": "[parameters('ImagePublisher')]",
                  "offer": "[parameters('ImageOffer')]",
                  "sku": "[parameters('ImageSku')]",
                  "version": "[parameters('ImageVersion')]"
                },
                "customize": [
                  {
                    "type": "PowerShell",
                    "name": "Virtual Desktop Optimization Tool",
                    "runElevated": true,
                    "runAsSystem": true,
                    "scriptUri": "https://raw.githubusercontent.com/jamasten/Azure/main/solutions/imageBuilder/scripts/vdot.ps1"
                  },
                  {
                    "type": "WindowsRestart",
                    "restartCheckCommand": "write-host 'Restarting post VDOT'",
                    "restartTimeout": "5m"
                  },
                  {
                    "type": "WindowsUpdate",
                    "searchCriteria": "IsInstalled=0",
                    "filters": [
                      "exclude:$_.Title -like '*Preview*'",
                      "include:$true"
                    ]
                  }
                ],
                "distribute": [
                  {
                    "type": "SharedImage",
                    "galleryImageId": "[resourceId('Microsoft.Compute/galleries/images', format('cg_aib_{0}_{1}', parameters('Environment'), parameters('LocationShortName')), parameters('ImageDefinitionName'))]",
                    "runOutputName": "[parameters('Timestamp')]",
                    "artifactTags": {},
                    "replicationRegions": [
                      "[parameters('Location')]"
                    ],
                    "storageAccountType": "[parameters('ImageStorageAccountType')]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/galleries/images', format('cg_aib_{0}_{1}', parameters('Environment'), parameters('LocationShortName')), parameters('ImageDefinitionName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('uai-aib-{0}-{1}', parameters('Environment'), parameters('LocationShortName')))]"
              ]
            },
            {
              "condition": "[parameters('CustomVnet')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('Network_{0}', parameters('Timestamp'))]",
              "resourceGroup": "[parameters('VirtualNetworkResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "IdentityName": {
                    "value": "[format('uai-aib-{0}-{1}', parameters('Environment'), parameters('LocationShortName'))]"
                  },
                  "ImagingResourceGroupName": {
                    "value": "[resourceGroup().name]"
                  },
                  "Role": {
                    "value": "[parameters('RoleVirtualNetworkJoin')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.8.9.13224",
                      "templateHash": "6979917839571053760"
                    }
                  },
                  "parameters": {
                    "IdentityName": {
                      "type": "string"
                    },
                    "ImagingResourceGroupName": {
                      "type": "string"
                    },
                    "Role": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2018-09-01-preview",
                      "name": "8f86a747-5ec8-48bc-86d0-d0915160e07d",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('Role'))]",
                        "principalId": "[reference(format('{0}/resourceGroups/{1}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{2}', subscription().id, parameters('ImagingResourceGroupName'), parameters('IdentityName')), '2018-11-30', 'Full').properties.principalId]",
                        "principalType": "ServicePrincipal"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Authorization/roleAssignments', guid(format('uai-aib-{0}-{1}', parameters('Environment'), parameters('LocationShortName')), parameters('RoleImageContributor'), resourceGroup().id))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('uai-aib-{0}-{1}', parameters('Environment'), parameters('LocationShortName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-aib-{0}-{1}', parameters('Environment'), variables('LocationShortName')))]",
        "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', guid(subscription().id, 'ImageContributor'))]",
        "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', guid(subscription().id, 'VnetJoin'))]"
      ]
    }
  ]
}