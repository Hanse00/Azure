{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Domain": {
            "type": "string",
            "metadata": {
                "description": "Name of the domain that provides ADDS to the WVD session hosts and is synchronized with Azure AD"
            },
            "defaultValue": "jasonmasten.com"
        },
        "Environment": {
            "type": "string",
            "allowedValues": [
                "d",
                "p",
                "t"
            ],
            "defaultValue": "d"
        },
        "HostPool": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "hp-wvd-d-eastus"
        },
        "Identifier": {
            "type": "string",
            "metadata": {
                "description": "Unique value to define the project or purpose"
            },
            "defaultValue": "poc"
        },
        "ImageOffer": {
            "type": "string",
            "metadata": {
                "description": "Offer for the virtual machine image"
            },
            "defaultValue": "office-365"
        },
        "ImagePublisher": {
            "type": "string",
            "metadata": {
                "description": "Publisher for the virtual machine image"
            },
            "defaultValue": "MicrosoftWindowsDesktop"
        },
        "ImageSku": {
            "type": "string",
            "metadata": {
                "description": "SKU for the virtual machine image"
            },
            "defaultValue": "20h1-evd-o365pp"
        },
        "ImageVersion": {
            "type": "string",
            "metadata": {
                "description": "Version for the virtual machine image"
            },
            "defaultValue": "latest"
        },
        "Location": {
            "type": "string",
            "metadata": {
                "description": "Deployment location for all resources"
            },
            "defaultValue": "[resourceGroup().location]"
        },
        "SessionHostCount": {
            "type": "int",
            "metadata": {
                "description": "Number of session hosts to deploy in the host pool"
            }
        },
        "StorageSku": {
            "type": "string",
            "metadata": {
                "description": "Storage SKU for the WVD session host disks"
            },
            "defaultValue": "Standard_LRS"
        },
        "Subnet": {
            "type": "string",
            "metadata": {
                "description": "Subnet for the WVD session hosts"
            },
            "defaultValue": "snet-clients-d-eastus"
        },
        "Timestamp": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        },
        "VirtualNetwork": {
            "type": "string",
            "metadata": {
                "description": "Virtual network for the WVD sessions hosts"
            },
            "defaultValue": "vnet-d-eastus"
        },
        "VirtualNetworkResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Virtual network resource group for the WVD sessions hosts"
            },
            "defaultValue": "rg-network-d-eastus"
        },
        "VmPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Local administrator password for the WVD session hosts"
            }
        },
        "VmSize": {
            "type": "string",
            "metadata": {
                "description": "Virtual machine SKU"
            },
            "defaultValue": "Standard_B2s"
        },
        "VmUsername": {
            "type": "string",
            "metadata": {
                "description": "Local administrator username for the session hosts"
            }
        }
    },
    "variables": {
        "Netbios": "[split(parameters('Domain'), '.')[0]]",
        "LocationAbbr": {
            "australiacentral": "ac",
            "australiacentral2": "ac2",
            "australiaeast": "ae",
            "australiasoutheast": "ase",
            "brazilsouth": "bs",
            "brazilsoutheast": "bse",
            "canadacentral": "cc",
            "canadaeast": "ce",
            "centralindia": "ci",
            "centralus": "cus",
            "eastasia": "ea",
            "eastus": "eus",
            "eastus2": "eus2",
            "francecentral": "fc",
            "francesouth": "fs",
            "germanynorth": "gn",
            "germanywestcentral": "gwc",
            "japaneast": "je",
            "japanwest": "jw",
            "koreacentral": "kc",
            "koreasouth": "ks",
            "northcentralus": "ncus",
            "northeurope": "ne",
            "norwayeast": "noe",
            "norwaywest": "now",
            "southafricanorth": "san",
            "southafricawest": "saw",
            "southcentralus": "scus",
            "southeastasia": "sea",
            "southindia": "si",
            "switzerlandnorth": "sn",
            "switzerlandwest": "sw",
            "uaecentral": "uaec",
            "uaenorth": "uaen",
            "uksouth": "uks",
            "ukwest": "ukw",
            "usdodcentral": "usdc",
            "usdodeast": "usde",
            "usgovarizona": "usga",
            "usgoviowa": "usgi",
            "usgovtexas": "usgt",
            "usgovvirginia": "usgv",
            "westcentralus": "wcus",
            "westeurope": "we",
            "westindia": "wi",
            "westus": "wus",
            "westus2": "wus2",
            "westus3": "wus3"
        },
        "Location": "[variables('LocationAbbr')[parameters('Location')]]",
        "AvailabilitySet": "[concat('as-wvd-', parameters('Identifier'),'-', parameters('Environment'), '-', variables('Location'))]",
        "Nic": "[concat('nic-wvd-', parameters('Identifier'),'-', parameters('Environment'), '-', variables('Location'), '-')]",
        "Vm": "[concat('vmwvd', parameters('Identifier'), parameters('Environment'), variables('Location'))]"
    },
    "resources": [
                {
            "comments": "---------- USER ASSIGNED MANAGED IDENTITY ----------",
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "uami-registrationToken",
            "apiVersion": "2018-11-30",
            "location": "[parameters('Location')]",
            "dependsOn": []
        },
        {
            "comments": "---------- ROLE ASSIGNMENT > USER ASSIGNED MANAGED IDENTITY ----------",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2017-09-01",
            "name": "351a333b-bbe1-5d39-9b8b-bee64966068e",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'uami-registrationToken')]"
            ],
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/uami-registrationToken'), '2018-11-30', 'Full').properties.principalId]",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "comments": "---------- DEPLOYMENT SCRIPT > HOST POOL REGISTRATION KEY ----------",
            "name": "ds-registrationToken",
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2019-10-01-preview",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities','uami-registrationToken')]": {}
                }
            },
            "location": "[parameters('Location')]",
            "kind": "AzurePowerShell",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'uami-registrationToken')]",
                "[resourceId('Microsoft.Authorization/roleAssignments', '351a333b-bbe1-5d39-9b8b-bee64966068e')]"
            ],
            "properties": {
                "azPowerShellVersion": "3.0.0",
                "cleanupPreference": "OnSuccess",
                "scriptContent": "
                    param(
                        [string] [Parameter(Mandatory=$true)] $Hostpool,
                        [string] [Parameter(Mandatory=$true)] $ResourceGroup
                    )
                    Install-Module -Name Az.DesktopVirtualization -AllowClobber -Scope AllUsers -Force
                    $Token = (New-AzWvdRegistrationInfo -ResourceGroupName $ResourceGroup -HostPoolName $Hostpool -ExpirationTime $((get-date).ToUniversalTime().AddHours(2).ToString('yyyy-MM-ddTHH:mm:ss.fffffffZ'))).Token
                    Write-Output $Token
                    $DeploymentScriptOutputs = @{}
                    $DeploymentScriptOutputs['text'] = $Token
                ",
                "arguments": "[format(' -Hostpool {0} -ResourceGroup {1}', parameters('HostPool'), resourceGroup().name)]",
                "forceUpdateTag": "[parameters('Timestamp')]",
                "retentionInterval": "P1D",
                "timeout": "PT30M"
            }
        },
        {
            "comments": "---------- AVAILABILITY SET ----------",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2019-07-01",
            "name": "[variables('AvailabilitySet')]",
            "location": "[parameters('Location')]",
            "dependsOn": [],
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformUpdateDomainCount": 5,
                "platformFaultDomainCount": 2,
                "virtualMachines": []
            }
        },
        {
            "comments": "---------- NETWORK INTERFACES ----------",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('Nic'), copyIndex())]",
            "location": "[parameters('Location')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('SessionHostCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId(subscription().subscriptionId, parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('VirtualNetwork'), parameters('Subnet'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "comments": "---------- VIRTUAL MACHINES ----------",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('Vm'), copyIndex())]",
            "location": "[parameters('Location')]",
            "dependsOn": [
                "[variables('availabilitySet')]",
                "nicLoop"
            ],
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('SessionHostCount')]"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('AvailabilitySet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('VmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('ImagePublisher')]",
                        "offer": "[parameters('ImageOffer')]",
                        "sku": "[parameters('ImageSku')]",
                        "version": "[parameters('ImageVersion')]"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat('disk-wvd-', parameters('Identifier'), '-', parameters('Environment'), '-', variables('Location'), '-', copyIndex(), '-0')]",
                        "createOption": "FromImage",
                        "caching": "None",
                        "managedDisk": {
                            "storageAccountType": "[parameters('StorageSku')]"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[concat(variables('Vm'), copyIndex())]",
                    "adminUsername": "[parameters('VmUsername')]",
                    "adminPassword": "[parameters('VmPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('Nic'), copyIndex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                },
                "licenseType": "Windows_Client"
            },
            "resources": [
                {
                    "comments": "---------- DESIRED STATE CONFIGURATION EXTENSION ----------",
                    "type": "extensions",
                    "apiVersion": "2019-07-01",
                    "name": "DSC",
                    "location": "[parameters('Location')]",
                    "dependsOn": [
                        "ds-registrationToken",
                        "[concat(variables('Vm'), copyIndex())]"
                    ],
                    "properties": {
                        "forceUpdateTag": "[parameters('Timestamp')]",
                        "autoUpgradeMinorVersion": true,
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.73",
                        "settings": {
                            "modulesUrl": "https://wvdportalstorageblob.blob.core.windows.net/galleryartifacts/Configuration_7-20-2020.zip",
                            "configurationFunction": "Configuration.ps1\\AddSessionHost",
                            "properties": {
                                "hostPoolName": "[parameters('HostPool')]",
                                "registrationInfoToken": "[reference('ds-registrationToken').outputs.text]"
                            }
                        },
                        "protectedSettings": {}
                    }
                },
                {
                    "comments": "---------- DOMAIN JOIN EXTENSION ----------",
                    "apiVersion": "2019-07-01",
                    "type": "extensions",
                    "name": "JsonADDomainExtension",
                    "location": "[parameters('Location')]",
                    "dependsOn": [
                        "[concat(variables('Vm'), copyIndex())]",
                        "Dsc"
                    ],
                    "properties": {
                        "forceUpdateTag": "[parameters('Timestamp')]",
                        "publisher": "Microsoft.Compute",
                        "type": "JsonADDomainExtension",
                        "typeHandlerVersion": "1.3",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "Name": "[parameters('Domain')]",
                            "User": "[concat(variables('Netbios'), '\\', parameters('VmUsername'))]",
                            "Restart": "true",
                            "Options": "3"
                        },
                        "protectedSettings": {
                            "Password": "[parameters('VmPassword')]"
                        }
                    }
                },
            ]
        }
    ]
}