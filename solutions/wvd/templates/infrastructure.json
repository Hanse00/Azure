{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "DomainAbbreviation": {
            "type": "string"
        },
        "Environment": {
            "type": "string"
        },
        "Location": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string"
        },
        "VmLocation": {
            "type": "string"
        }
    },
    "variables": {},
    "resources": [
        {
            "comments": "---------- WVD HOST POOL ----------",
            "type": "Microsoft.DesktopVirtualization/hostpools",
            "apiVersion": "2019-12-10-preview",
            "name": "[concat('hp-wvd-', parameters('Environment'), '-', parameters('Location'))]",
            "location": "[parameters('Location')]",
            "properties": {
                "description": "",
                "hostPoolType": "Pooled",
                "maxSessionLimit": 4,
                "loadBalancerType": "DepthFirst",
                "validationEnvironment": false,
                "registrationInfo": {
                    "registrationTokenOperation": "None"
                },
                "preferredAppGroupType": "Desktop"
            }
        },
        {
            "comments": "---------- WVD APP GROUP ----------",
            "type": "Microsoft.DesktopVirtualization/applicationgroups",
            "apiVersion": "2019-12-10-preview",
            "name": "Desktops",
            "location": "[parameters('Location')]",
            "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/hostpools', concat('hp-wvd-', parameters('Environment'), '-', parameters('Location')))]"
            ],
            "kind": "Desktop",
            "properties": {
                "hostPoolArmPath": "[resourceId('Microsoft.DesktopVirtualization/hostpools', concat('hp-wvd-', parameters('Environment'), '-', parameters('Location')))]",
                "description": "Desktop Application Group created through an ARM template",
                "friendlyName": "Pooled Desktop",
                "applicationGroupType": "Desktop"
            }
        },
        {
            "comments": "---------- WVD WORKSPACE ----------",
            "type": "Microsoft.DesktopVirtualization/workspaces",
            "apiVersion": "2019-12-10-preview",
            "name": "[concat('ws-wvd-', parameters('Environment'), '-', parameters('Location'))]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/applicationgroups', 'Desktops')]"
            ],
            "properties": {
                "applicationGroupReferences": [
                    "[resourceId('Microsoft.DesktopVirtualization/applicationgroups', 'Desktops')]"
                ]
            }
        },
        {
            "comments": "---------- USER ASSIGNED MANAGED IDENTITY ----------",
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "uami-registrationToken",
            "apiVersion": "2018-11-30",
            "location": "[parameters('Location')]",
            "dependsOn": []
        },
        {
            "comments": "---------- ROLE ASSIGNMENT > USER ASSIGNED MANAGED IDENTITY ----------",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2017-09-01",
            "name": "351a333b-bbe1-5d39-9b8b-bee64966068e",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'uami-registrationToken')]"
            ],
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/uami-registrationToken'), '2018-11-30', 'Full').properties.principalId]",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "comments": "---------- DEPLOYMENT SCRIPT > HOST POOL REGISTRATION KEY ----------",
            "name": "ds-registrationToken",
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2019-10-01-preview",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities','uami-registrationToken')]": {}
                }
            },
            "location": "[parameters('Location')]",
            "kind": "AzurePowerShell",
            "tags": {},
            "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/hostpools', concat('hp-wvd-', parameters('Environment'), '-', parameters('Location')))]",
                "[resourceId('Microsoft.DesktopVirtualization/applicationgroups', 'Desktops')]",
                "[resourceId('Microsoft.DesktopVirtualization/workspaces', concat('ws-wvd-', parameters('Environment'), '-', parameters('Location')))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'uami-registrationToken')]",
                "[resourceId('Microsoft.Authorization/roleAssignments', '351a333b-bbe1-5d39-9b8b-bee64966068e')]"
            ],
            "properties": {
                "azPowerShellVersion": "3.0.0",
                "cleanupPreference": "OnSuccess",
                "scriptContent": "
                    param(
                        [string] [Parameter(Mandatory=$true)] $Hostpool,
                        [string] [Parameter(Mandatory=$true)] $ResourceGroup
                    )
                    Install-Module -Name Az.DesktopVirtualization -AllowClobber -Scope AllUsers -Force
                    $Token = (New-AzWvdRegistrationInfo -ResourceGroupName $ResourceGroup -HostPoolName $Hostpool -ExpirationTime $((get-date).ToUniversalTime().AddHours(2).ToString('yyyy-MM-ddTHH:mm:ss.fffffffZ'))).Token
                    Write-Output $Token
                    $DeploymentScriptOutputs = @{}
                    $DeploymentScriptOutputs['text'] = $Token
                ",
                "arguments": "[format(' -Hostpool {0} -ResourceGroup {1}', concat('hp-wvd-', parameters('Environment'), '-', parameters('Location')), resourceGroup().name)]",
                "forceUpdateTag": "[parameters('Timestamp')]",
                "retentionInterval": "P1D",
                "timeout": "PT30M"
            }
        },
        {
            "comments": "---------- STORAGE ACCOUNT ----------",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[concat('stor', parameters('DomainAbbreviation'), 'wvd', parameters('Environment'), parameters('VmLocation'), 'p0')]",
            "location": "[parameters('Location')]",
            "sku": {
                "name": "Premium_LRS",
                "tier": "Premium"
            },
            "kind": "FileStorage",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "largeFileSharesState": "Enabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "comments": "---------- STORAGE ACCOUNT > FILE SERVICES ----------",
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat('stor', parameters('DomainAbbreviation'), 'wvd', parameters('Environment'), parameters('VmLocation'), 'p0/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', concat('stor', parameters('DomainAbbreviation'), 'wvd', parameters('Environment'), parameters('VmLocation'), 'p0'))]"
            ],
            "properties": {
                "shareDeleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "comments": "---------- STORAGE ACCOUNT > FILE SHARE ----------",
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat('stor', parameters('DomainAbbreviation'), 'wvd', parameters('Environment'), parameters('VmLocation'), 'p0/default/hp-wvd-d-eastus')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', concat('stor', parameters('DomainAbbreviation'), 'wvd', parameters('Environment'), parameters('VmLocation'), 'p0'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', concat('stor', parameters('DomainAbbreviation'), 'wvd', parameters('Environment'), parameters('VmLocation'), 'p0'))]"
            ],
            "properties": {
                "accessTier": "Premium",
                "shareQuota": 100,
                "enabledProtocols": "SMB"
            }
        }
    ],
    "outputs": {
        "registrationToken": {
            "type": "string",
            "value": "[reference('ds-registrationToken').outputs.text]"
        }
    }
}