{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "DomainAbbreviation": {
            "type": "string"
        },
        "Environment": {
            "type": "string"
        },
        "Location": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string"
        },
        "UserObjectId": {
            "type": "string"
        },
        "VmPassword": {
            "type": "securestring"
        },
        "VmUsername": {
            "type": "string"
        }
    },
    "variables": {},
    "resources": [
        {
            "comments": "---------- KEY VAULT ----------",
            "type": "Microsoft.KeyVault/vaults",
            "name": "[concat('kv-', parameters('DomainAbbreviation'), '-', parameters('Environment'), '-', parameters('Location'))]",
            "apiVersion": "2016-10-01",
            "location": "[parameters('Location')]",
            "tags": {},
            "dependsOn": [],
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[parameters('UserObjectId')]",
                        "permissions": {
                            "keys": [
                                "encrypt",
                                "decrypt",
                                "wrapKey",
                                "unwrapKey",
                                "sign",
                                "verify",
                                "get",
                                "list",
                                "create",
                                "update",
                                "import",
                                "delete",
                                "backup",
                                "restore",
                                "recover",
                                "purge"
                            ],
                            "secrets": [
                                "get",
                                "list",
                                "set",
                                "delete",
                                "backup",
                                "restore",
                                "recover",
                                "purge"
                            ]
                        }
                    },
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'uami-deploykek'), '2018-11-30', 'Full').properties.principalId]",
                        "permissions": {
                            "keys": [
                                "encrypt",
                                "decrypt",
                                "wrapKey",
                                "unwrapKey",
                                "sign",
                                "verify",
                                "get",
                                "list",
                                "create",
                                "update",
                                "import",
                                "delete",
                                "backup",
                                "restore",
                                "recover",
                                "purge"
                            ],
                            "secrets": [
                                "get",
                                "list",
                                "set",
                                "delete",
                                "backup",
                                "restore",
                                "recover",
                                "purge"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": true,
                "enabledForTemplateDeployment": true,
                "enabledForDiskEncryption": true
            }
        },
        {
            "comments": "---------- KEY VAULT > KEY ENCRYPTION KEY ----------",
            "name": "ds-diskencryptionkek",
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2019-10-01-preview",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities','uami-deploykek')]": {}
                }
            },
            "location": "[parameters('Location')]",
            "kind": "AzurePowerShell",
            "tags": {},
            "dependsOn": [
                "[concat('kv-', parameters('DomainAbbreviation'), '-', parameters('Environment'), '-', parameters('Location'))]"
            ],
            "properties": {
                "azPowerShellVersion": "3.0.0",
                "cleanupPreference": "OnSuccess",
                "scriptContent": "
                    param(
                        [string] [Parameter(Mandatory=$true)] $KeyVault
                    )

                    if(!(Get-AzKeyVaultKey -Name DiskEncryption -VaultName $KeyVault))
                    {
                        Add-AzKeyVaultKey -Name DiskEncryption -VaultName $KeyVault -Destination Software
                    }

                    $KeyEncryptionKeyURL = (Get-AzKeyVaultKey -VaultName $KeyVault -Name 'DiskEncryption' -IncludeVersions | Where-Object {$_.Enabled -eq $true}).Id
                
                    Write-Output $KeyEncryptionKeyURL

                    $DeploymentScriptOutputs = @{}
            
                    $DeploymentScriptOutputs['text'] = $KeyEncryptionKeyURL 
                ",
                "arguments": "[format(' -KeyVault {0}', concat('kv-', parameters('DomainAbbreviation'), '-', parameters('Environment'), '-', parameters('Location')))]",
                "forceUpdateTag": "[parameters('Timestamp')]",
                "retentionInterval": "P1D",
                "timeout": "PT30M"
            }
        },
        {
            "comments": "---------- KEY VAULT > SECRET > KEK URL ----------",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat('kv-', parameters('DomainAbbreviation'), '-', parameters('Environment'), '-', parameters('Location'), '/DiskEncryptionKekUrl')]",
            "tags": {},
            "dependsOn": [
                "ds-diskencryptionkek"
            ],
            "properties": {
                "value": "[reference('ds-diskencryptionkek').outputs.text]"
            }
        },
        {
            "comments": "---------- KEY VAULT > SECRET > VM PASSWORD ----------",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat('kv-', parameters('DomainAbbreviation'), '-', parameters('Environment'), '-', parameters('Location'), '/VmPassword')]",
            "tags": {},
            "dependsOn": [
                "ds-diskencryptionkek"
            ],
            "properties": {
                "value": "[parameters('VmPassword')]"
            }
        },
        {
            "comments": "---------- KEY VAULT > SECRET > KEK URL ----------",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat('kv-', parameters('DomainAbbreviation'), '-', parameters('Environment'), '-', parameters('Location'), '/VmUsername')]",
            "tags": {},
            "dependsOn": [
                "ds-diskencryptionkek"
            ],
            "properties": {
                "value": "[parameters('VmUsername')]"
            }
        },
        {
            "comments": "---------- STORAGE ACCOUNT ----------",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[concat('stor', parameters('DomainAbbreviation'), parameters('Environment'), parameters('Location'), 's')]",
            "location": "[parameters('Location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "comments": "---------- LOG ANALYTICS ----------",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat('law-', parameters('Environment'), '-', parameters('Location'))]",
            "location": "[parameters('Location')]",
            "tags": {},
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30,
                "workspaceCapping": {
                    "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        }
    ],
    "outputs": {}
}